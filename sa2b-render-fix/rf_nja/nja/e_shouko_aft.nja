CNKOBJECT_START

PLIST      strip_e_shouko_aft[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 255, 255, 255 ),
	MAmbi( 255, 127, 127, 127 ),
	MSpec( 11, 255, 255, 255 ),
	CnkT_TID( FCL_U|FCL_V|FDA_100 ), _TID( FFM_BF, 2 ),
	CnkS_UVN( FST_DB ), 462, _NB( UFO_0, 38 ),
	StripL(4),
	4, 	Uvn( 188, 0 ),
	6, 	Uvn( 188, 43 ),
	3, 	Uvn( 132, 0 ),
	5, 	Uvn( 132, 43 ),
	StripL(3),
	0, 	Uvn( 68, 43 ),
	1, 	Uvn( 54, 43 ),
	6, 	Uvn( 54, 255 ),
	StripL(4),
	59, 	Uvn( 132, 0 ),
	34, 	Uvn( 132, 43 ),
	60, 	Uvn( 188, 0 ),
	35, 	Uvn( 188, 43 ),
	StripL(4),
	2, 	Uvn( 14, 43 ),
	5, 	Uvn( 14, 229 ),
	1, 	Uvn( 190, 43 ),
	6, 	Uvn( 86, 229 ),
	StripR(5),
	17, 	Uvn( 158, 1 ),
	16, 	Uvn( 188, 1 ),
	19, 	Uvn( 188, 255 ),
	15, 	Uvn( 92, 1 ),
	20, 	Uvn( 92, 255 ),
	StripL(3),
	15, 	Uvn( 188, 41 ),
	18, 	Uvn( 188, 1 ),
	16, 	Uvn( 114, 1 ),
	StripL(3),
	18, 	Uvn( 188, 1 ),
	17, 	Uvn( 114, 1 ),
	16, 	Uvn( 188, 41 ),
	StripL(3),
	62, 	Uvn( 114, 1 ),
	64, 	Uvn( 188, 1 ),
	61, 	Uvn( 188, 41 ),
	StripR(5),
	63, 	Uvn( 158, 1 ),
	65, 	Uvn( 188, 255 ),
	62, 	Uvn( 188, 1 ),
	66, 	Uvn( 138, 255 ),
	61, 	Uvn( 138, 1 ),
	StripL(4),
	22, 	Uvn( 56, 85 ),
	21, 	Uvn( 56, 245 ),
	48, 	Uvn( 0, 85 ),
	23, 	Uvn( 0, 215 ),
	StripL(4),
	48, 	Uvn( 64, 39 ),
	23, 	Uvn( 64, 255 ),
	49, 	Uvn( 120, 39 ),
	24, 	Uvn( 120, 255 ),
	StripL(3),
	49, 	Uvn( 66, 139 ),
	24, 	Uvn( 66, 255 ),
	53, 	Uvn( 122, 255 ),
	StripL(4),
	21, 	Uvn( 64, 39 ),
	53, 	Uvn( 64, 255 ),
	23, 	Uvn( 120, 39 ),
	24, 	Uvn( 120, 255 ),
	StripL(4),
	46, 	Uvn( 64, 39 ),
	47, 	Uvn( 64, 255 ),
	44, 	Uvn( 120, 39 ),
	52, 	Uvn( 120, 255 ),
	StripL(3),
	52, 	Uvn( 122, 255 ),
	47, 	Uvn( 66, 255 ),
	50, 	Uvn( 66, 139 ),
	StripL(4),
	50, 	Uvn( 64, 39 ),
	47, 	Uvn( 64, 255 ),
	51, 	Uvn( 120, 39 ),
	46, 	Uvn( 120, 255 ),
	StripL(4),
	51, 	Uvn( 0, 85 ),
	46, 	Uvn( 0, 215 ),
	45, 	Uvn( 56, 85 ),
	44, 	Uvn( 56, 245 ),
	StripR(5),
	32, 	Uvn( 6, 51 ),
	27, 	Uvn( 6, 0 ),
	33, 	Uvn( 82, 21 ),
	42, 	Uvn( 6, 51 ),
	28, 	Uvn( 6, 0 ),
	StripL(3),
	48, 	Uvn( 18, 117 ),
	49, 	Uvn( 0, 117 ),
	54, 	Uvn( 91, 117 ),
	StripL(3),
	39, 	Uvn( 188, 0 ),
	52, 	Uvn( 152, 247 ),
	50, 	Uvn( 188, 247 ),
	StripL(4),
	41, 	Uvn( 38, 39 ),
	54, 	Uvn( 38, 253 ),
	37, 	Uvn( 188, 39 ),
	49, 	Uvn( 188, 253 ),
	StripL(3),
	38, 	Uvn( 188, 0 ),
	37, 	Uvn( 162, 0 ),
	49, 	Uvn( 188, 255 ),
	StripL(3),
	50, 	Uvn( 188, 255 ),
	36, 	Uvn( 188, 0 ),
	39, 	Uvn( 162, 0 ),
	StripL(3),
	53, 	Uvn( 188, 247 ),
	38, 	Uvn( 188, 0 ),
	49, 	Uvn( 152, 247 ),
	StripL(6),
	55, 	Uvn( 52, 255 ),
	27, 	Uvn( 52, 0 ),
	43, 	Uvn( 100, 255 ),
	42, 	Uvn( 100, 0 ),
	54, 	Uvn( 52, 255 ),
	28, 	Uvn( 52, 0 ),
	StripL(3),
	26, 	Uvn( 116, 39 ),
	25, 	Uvn( 168, 39 ),
	43, 	Uvn( 144, 255 ),
	StripL(4),
	41, 	Uvn( 156, 39 ),
	26, 	Uvn( 100, 39 ),
	54, 	Uvn( 156, 255 ),
	43, 	Uvn( 100, 255 ),
	StripL(3),
	33, 	Uvn( 82, 21 ),
	32, 	Uvn( 6, 51 ),
	31, 	Uvn( 6, 0 ),
	StripL(3),
	31, 	Uvn( 6, 51 ),
	28, 	Uvn( 6, 0 ),
	33, 	Uvn( 82, 21 ),
	StripL(4),
	31, 	Uvn( 152, 0 ),
	30, 	Uvn( 152, 255 ),
	28, 	Uvn( 66, 0 ),
	54, 	Uvn( 66, 255 ),
	StripL(4),
	36, 	Uvn( 188, 39 ),
	50, 	Uvn( 188, 253 ),
	40, 	Uvn( 38, 39 ),
	55, 	Uvn( 38, 253 ),
	StripL(4),
	43, 	Uvn( 100, 255 ),
	25, 	Uvn( 100, 39 ),
	55, 	Uvn( 156, 255 ),
	40, 	Uvn( 156, 39 ),
	StripL(4),
	29, 	Uvn( 66, 255 ),
	32, 	Uvn( 66, 0 ),
	55, 	Uvn( 152, 255 ),
	27, 	Uvn( 152, 0 ),
	StripL(4),
	32, 	Uvn( 152, 0 ),
	29, 	Uvn( 152, 255 ),
	31, 	Uvn( 66, 0 ),
	30, 	Uvn( 66, 255 ),
	StripL(4),
	69, 	Uvn( 82, 45 ),
	68, 	Uvn( 0, 45 ),
	67, 	Uvn( 82, 201 ),
	70, 	Uvn( 0, 201 ),
	StripL(3),
	35, 	Uvn( 54, 255 ),
	57, 	Uvn( 54, 43 ),
	56, 	Uvn( 68, 43 ),
	StripL(4),
	57, 	Uvn( 190, 43 ),
	35, 	Uvn( 86, 229 ),
	58, 	Uvn( 14, 43 ),
	34, 	Uvn( 14, 229 ),
	StripL(3),
	62, 	Uvn( 188, 41 ),
	63, 	Uvn( 114, 1 ),
	64, 	Uvn( 188, 1 ),
	CnkT_TID( FCL_U|FCL_V|FDA_100 ), _TID( FFM_BF, 1 ),
	CnkS_UVN( FST_UA|FST_DB ), 28, _NB( UFO_0, 2 ),
	StripL(4),
	10, 	Uvn( 256, 0 ),
	9, 	Uvn( 0, 0 ),
	8, 	Uvn( 256, 255 ),
	7, 	Uvn( 0, 255 ),
	StripL(4),
	12, 	Uvn( 0, 255 ),
	11, 	Uvn( 256, 255 ),
	14, 	Uvn( 0, 0 ),
	13, 	Uvn( 256, 0 ),
	CnkNull(),
	CnkEnd()
END

VLIST      vertex_e_shouko_aft[]
START
	CnkV_VN(0, 427),
	OffnbIdx(0, 71),
	VERT( 0x419e6667, 0x40d33332, 0xc2000000 ),
	NORM( 0x00000000, 0x3f1ca3a7, 0x3f4a7c23 ),
	VERT( 0x41a80000, 0x40d33332, 0xc2000000 ),
	NORM( 0x3f0261cc, 0x3f082420, 0x3f2d3613 ),
	VERT( 0x41a33334, 0x40d33332, 0xc2733334 ),
	NORM( 0x3f7ff1c7, 0x39b9d84f, 0xbcaaa112 ),
	VERT( 0x41a33334, 0x4214cccd, 0xc27f3334 ),
	NORM( 0x3f7ffcdd, 0x3c1e24c7, 0xbad2d2d9 ),
	VERT( 0x41a33333, 0x4219999a, 0xc2626667 ),
	NORM( 0x3f7ffcdd, 0x3c1e24c7, 0xbad2d2d9 ),
	VERT( 0x41a33334, 0x42000000, 0xc27d2929 ),
	NORM( 0x3f7ffb63, 0x3bad7031, 0xbc2e0529 ),
	VERT( 0x41a42a82, 0x42000000, 0xc24e98a3 ),
	NORM( 0x3f7ffb62, 0x3c2949ac, 0xbbbf660a ),
	VERT( 0xc1a5679c, 0x41533333, 0xc25d999b ),
	NORM( 0xbf7ff28f, 0x3b0ce80b, 0xbca4f654 ),
	VERT( 0xc1a7679c, 0x41533335, 0xc22d999b ),
	NORM( 0xbf7ff28f, 0x3b0ce80b, 0xbca4f654 ),
	VERT( 0xc1a55539, 0x41c8cccb, 0xc25d999b ),
	NORM( 0xbf7ff28f, 0x3b0ce80a, 0xbca4f654 ),
	VERT( 0xc1a73333, 0x41c8cccc, 0xc22d999a ),
	NORM( 0xbf7ff28f, 0x3b0ce80c, 0xbca4f655 ),
	VERT( 0x41a5679c, 0x41533334, 0xc25d999b ),
	NORM( 0x3f7fec7f, 0x3b0ce4bb, 0xbcc711fc ),
	VERT( 0x41a7679c, 0x41533334, 0xc22d999b ),
	NORM( 0x3f7fec7f, 0x3b0ce4bb, 0xbcc711fd ),
	VERT( 0x41a4886c, 0x41c8cccb, 0xc25d999b ),
	NORM( 0x3f7fec7f, 0x3b0ce4bb, 0xbcc711fc ),
	VERT( 0x41a73333, 0x41c8cccc, 0xc22d999a ),
	NORM( 0x3f7fec7f, 0x3b0ce4bb, 0xbcc711fd ),
	VERT( 0xc1700005, 0x3f666660, 0x407ffff0 ),
	NORM( 0x00000000, 0xbf7b87c9, 0x3e3e8353 ),
	VERT( 0xc1a80001, 0x3f666660, 0x407ffff0 ),
	NORM( 0xbf2feb7e, 0xbf2c8816, 0x3e8ade15 ),
	VERT( 0xc1a80000, 0x40866664, 0x40800010 ),
	NORM( 0xbf7628ef, 0xb4d4db4c, 0x3e8c96c0 ),
	VERT( 0xc17e6665, 0x40900000, 0x414666c8 ),
	NORM( 0xbebd0910, 0xbf407523, 0x3f0bddb1 ),
	VERT( 0xc1a7fffb, 0x40066660, 0xc286ccce ),
	NORM( 0xbcf0e119, 0xbf7fda6a, 0xbc899a02 ),
	VERT( 0xc16ffff9, 0x40066660, 0xc286ccce ),
	NORM( 0x00000000, 0xbf7ff6bf, 0xbc89a93d ),
	VERT( 0xc1940000, 0x40066660, 0xc286ccce ),
	NORM( 0x3ed097f8, 0x3f337c6c, 0xbf15cf47 ),
	VERT( 0xc1940002, 0x40066660, 0xc22b3334 ),
	NORM( 0x3f7fffd4, 0x00000000, 0xbb159d44 ),
	VERT( 0xc194cccd, 0x40d33332, 0xc2780001 ),
	NORM( 0x3f22a264, 0x3f39b45c, 0xbe87a529 ),
	VERT( 0xc1a33333, 0x40d33332, 0xc2780001 ),
	NORM( 0xbf118dec, 0x3f470aad, 0xbe899572 ),
	VERT( 0x4019993c, 0x414e6666, 0xc0ecccd0 ),
	NORM( 0x3e809b87, 0x3f7715be, 0xbd95ae2b ),
	VERT( 0xc01999d6, 0x414e6666, 0xc0ecccd0 ),
	NORM( 0xbebefaeb, 0x3f6d2953, 0xbd51e707 ),
	VERT( 0x403167bc, 0x40dcccca, 0xc2cb3334 ),
	NORM( 0x3f776431, 0x3d0a267b, 0xbe828577 ),
	VERT( 0xc0316933, 0x40dcccca, 0xc2cb3334 ),
	NORM( 0xbf75e198, 0x3e1e04e7, 0xbe6d3e71 ),
	VERT( 0x40400059, 0x40866664, 0xc22b3334 ),
	NORM( 0x3eabbe6f, 0xbf7123e2, 0xbc6a8eec ),
	VERT( 0xc03fff90, 0x40866664, 0xc22b3334 ),
	NORM( 0xbf0db838, 0xbf551db2, 0xbcb82bf9 ),
	VERT( 0xbfcac205, 0x40866664, 0xc2cb3334 ),
	NORM( 0xbf05ff0a, 0xbf50820d, 0xbe8025a8 ),
	VERT( 0x3fcabed5, 0x40866664, 0xc2cb3334 ),
	NORM( 0x3ece7d4c, 0xbf628f56, 0xbe6e3b43 ),
	VERT( 0xb84beeb3, 0x40dcccca, 0xc2d60001 ),
	NORM( 0xb50f73fa, 0x3d3ec4ea, 0xbf7fb8e2 ),
	VERT( 0xc1a33332, 0x42000000, 0xc27d292a ),
	NORM( 0xbf7ffb63, 0x3bad6f9f, 0xbc2e061b ),
	VERT( 0xc1a42a81, 0x42000000, 0xc24e98a4 ),
	NORM( 0xbf7ffb62, 0x3c29497e, 0xbbbf67d7 ),
	VERT( 0x41a7fffe, 0x40d33332, 0x40800010 ),
	NORM( 0x3f5e0d9c, 0x3efec80a, 0x33e3bf2c ),
	VERT( 0xc1a80003, 0x40d33332, 0x407fffd0 ),
	NORM( 0xbf5e0d9b, 0x3efec80d, 0x00000000 ),
	VERT( 0xc1a80003, 0x40866664, 0x407fffd0 ),
	NORM( 0xbf800000, 0xb356f4e1, 0xb1305fab ),
	VERT( 0x41a7fffe, 0x40866664, 0x40800010 ),
	NORM( 0x3f800000, 0xb2e1faae, 0x3401d55c ),
	VERT( 0x40d3331d, 0x40d33332, 0xc0ecccd0 ),
	NORM( 0x3e4fd3fc, 0x3f7a9862, 0xbcc68a70 ),
	VERT( 0xc0d3334d, 0x40d33332, 0xc0ecccd0 ),
	NORM( 0xbe99effa, 0x3f7426de, 0xbba6fee3 ),
	VERT( 0xb838bb80, 0x411e6666, 0xc2cb3334 ),
	NORM( 0xb317853f, 0x3f7877be, 0xbe7691cd ),
	VERT( 0xb63eeb37, 0x411e6666, 0xc22b3334 ),
	NORM( 0xbd8825eb, 0x3f7f4203, 0xbd179da7 ),
	VERT( 0x41940001, 0x40066660, 0xc286ccce ),
	NORM( 0xbed097f6, 0x3f337c6c, 0xbf15cf49 ),
	VERT( 0x41940001, 0x40066660, 0xc22b3334 ),
	NORM( 0xbf7fffd4, 0x00000000, 0xbb159f76 ),
	VERT( 0x4194cccd, 0x40d33332, 0xc2780001 ),
	NORM( 0xbf22a263, 0x3f39b45c, 0xbe87a52a ),
	VERT( 0x41a33334, 0x40d33332, 0xc2780001 ),
	NORM( 0x3f118df2, 0x3f470aaa, 0xbe89956a ),
	VERT( 0xc1940002, 0x40d33332, 0xc22b3334 ),
	NORM( 0x3f34b68b, 0xbf35531b, 0xbad33aaa ),
	VERT( 0xc1a80003, 0x40d33332, 0xc22b3378 ),
	NORM( 0xbf350661, 0x3f350372, 0xbaa6c393 ),
	VERT( 0x41a80001, 0x40d33332, 0xc22b3334 ),
	NORM( 0x3f350702, 0x3f3502d2, 0xbaa6bf87 ),
	VERT( 0x41940001, 0x40d33332, 0xc22b3334 ),
	NORM( 0xbf3551b8, 0x3f34b7ef, 0xbad3f326 ),
	VERT( 0x41a80001, 0x40066660, 0xc286ccce ),
	NORM( 0x3ec81f3d, 0x3f392b49, 0xbf11b9fb ),
	VERT( 0xc1a80000, 0x40066660, 0xc286ccce ),
	NORM( 0xbec81f35, 0x3f392b49, 0xbf11b9fc ),
	VERT( 0xc0bfffba, 0x40d33332, 0xc22b3334 ),
	NORM( 0xbf4164d3, 0x3f27a489, 0xbcb16a13 ),
	VERT( 0x40bfffff, 0x40d33332, 0xc22b3334 ),
	NORM( 0x3f36bd02, 0x3f32fcc6, 0xbd24e79e ),
	VERT( 0xc19e6668, 0x40d33332, 0xc2000001 ),
	NORM( 0x00000000, 0x3f1ca3a7, 0x3f4a7c23 ),
	VERT( 0xc1a80001, 0x40d33332, 0xc2000001 ),
	NORM( 0xbf0261cd, 0x3f082420, 0x3f2d3612 ),
	VERT( 0xc1a33332, 0x40d33332, 0xc2733334 ),
	NORM( 0xbf7ff1c7, 0x39b9d661, 0xbcaaa17e ),
	VERT( 0xc1a33332, 0x4214cccd, 0xc27f3334 ),
	NORM( 0xbf7ffcdd, 0x3c1e244d, 0xbad2db20 ),
	VERT( 0xc1a33332, 0x4219999a, 0xc2626668 ),
	NORM( 0xbf7ffcdd, 0x3c1e244d, 0xbad2db20 ),
	VERT( 0x41700000, 0x3f666660, 0x407ffff0 ),
	NORM( 0x00000000, 0xbf7b87ca, 0x3e3e834e ),
	VERT( 0x41a7ffff, 0x3f666660, 0x407ffff0 ),
	NORM( 0x3f2feb7e, 0xbf2c8816, 0x3e8ade14 ),
	VERT( 0x41a7fffe, 0x40866664, 0x40800010 ),
	NORM( 0x3f7628ef, 0xb4d4db55, 0x3e8c96c1 ),
	VERT( 0x417e665f, 0x40900000, 0x414666cc ),
	NORM( 0x3ebd0911, 0xbf407524, 0x3f0bddaf ),
	VERT( 0x41a7ffff, 0x40066660, 0xc286ccce ),
	NORM( 0x3cf0e11b, 0xbf7fda6a, 0xbc899a00 ),
	VERT( 0x416fffff, 0x40066660, 0xc286ccce ),
	NORM( 0x00000000, 0xbf7ff6bf, 0xbc89a93d ),
	VERT( 0xc0b99989, 0x408ffffe, 0x40800108 ),
	NORM( 0x00000000, 0xbf7fff6c, 0x3b89ade6 ),
	VERT( 0x40d66685, 0x40866664, 0xc286ccce ),
	NORM( 0x00000000, 0xbf7fff6c, 0x3b89ade6 ),
	VERT( 0xc0d6663a, 0x40866664, 0xc286ccce ),
	NORM( 0x00000000, 0xbf7fff6c, 0x3b89ade6 ),
	VERT( 0x40b99987, 0x408ffffe, 0x40800108 ),
	NORM( 0x00000000, 0xbf7fff6c, 0x3b89ade6 ),
	CnkEnd()
END

CNKMODEL   model_e_shouko_aft[]
START
VList      vertex_e_shouko_aft,
PList      strip_e_shouko_aft,
Center    -0.000002F,  19.650002F, -47.299957F,
Radius     63.285828F,
END

CNKOBJECT  object_e_shouko_aft[]
START
EvalFlags ( 0x00000017 ),
CNKModel   model_e_shouko_aft,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END

DEFAULT_START

#ifndef DEFAULT_OBJECT_NAME
#define DEFAULT_OBJECT_NAME object_e_shouko_aft
#endif

DEFAULT_END
