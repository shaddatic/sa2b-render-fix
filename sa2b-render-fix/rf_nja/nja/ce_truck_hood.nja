CNKOBJECT_START

PLIST      strip_ce_truck_hood[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 255, 255, 255 ),
	MAmbi( 255, 127, 127, 127 ),
	MSpec( 0, 255, 255, 255 ),
	CnkT_TID( FCL_U|FCL_V|FDA_100 ), _TID( FFM_BF, 2 ),
	CnkS_UVN( FST_IL|FST_IS ), 68, _NB( UFO_0, 6 ),
	StripL(3),
	4, 	Uvn( 80, 111 ),
	5, 	Uvn( 256, 0 ),
	8, 	Uvn( 256, 111 ),
	StripL(4),
	7, 	Uvn( 256, 0 ),
	5, 	Uvn( 0, 0 ),
	6, 	Uvn( 256, 111 ),
	4, 	Uvn( 0, 111 ),
	StripL(3),
	6, 	Uvn( 80, 111 ),
	8, 	Uvn( 256, 111 ),
	7, 	Uvn( 256, 0 ),
	StripL(3),
	13, 	Uvn( 256, 111 ),
	10, 	Uvn( 256, 0 ),
	9, 	Uvn( 80, 111 ),
	StripL(4),
	11, 	Uvn( 256, 111 ),
	9, 	Uvn( 0, 111 ),
	12, 	Uvn( 256, 0 ),
	10, 	Uvn( 0, 0 ),
	StripL(3),
	12, 	Uvn( 256, 0 ),
	13, 	Uvn( 256, 111 ),
	11, 	Uvn( 80, 111 ),
	CnkNull(),
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 178, 178, 178 ),
	MAmbi( 255, 127, 127, 127 ),
	MSpec( 11, 255, 255, 255 ),
	CnkT_TID( FCL_U|FCL_V|FDA_100 ), _TID( FFM_BF, 8 ),
	CnkS_UVN( FST_DB ), 364, _NB( UFO_0, 29 ),
	StripL(3),
	5, 	Uvn( 124, 61 ),
	7, 	Uvn( 123, 95 ),
	8, 	Uvn( 102, 77 ),
	StripL(3),
	13, 	Uvn( 102, 77 ),
	12, 	Uvn( 124, 61 ),
	10, 	Uvn( 123, 95 ),
	StripL(3),
	30, 	Uvn( 252, 3 ),
	31, 	Uvn( 128, 3 ),
	34, 	Uvn( 128, 131 ),
	StripL(3),
	32, 	Uvn( 128, 3 ),
	34, 	Uvn( 128, 131 ),
	33, 	Uvn( 252, 3 ),
	StripL(3),
	31, 	Uvn( 252, 3 ),
	33, 	Uvn( 128, 3 ),
	34, 	Uvn( 128, 131 ),
	StripL(4),
	37, 	Uvn( 124, 119 ),
	36, 	Uvn( 0, 119 ),
	39, 	Uvn( 124, 3 ),
	40, 	Uvn( 0, 3 ),
	StripL(4),
	38, 	Uvn( 124, 119 ),
	35, 	Uvn( 0, 119 ),
	39, 	Uvn( 124, 3 ),
	37, 	Uvn( 0, 3 ),
	StripL(3),
	39, 	Uvn( 124, 3 ),
	40, 	Uvn( 124, 119 ),
	38, 	Uvn( 0, 3 ),
	StripL(3),
	42, 	Uvn( 0, 119 ),
	43, 	Uvn( 124, 119 ),
	46, 	Uvn( 0, 3 ),
	StripL(6),
	44, 	Uvn( 124, 119 ),
	46, 	Uvn( 0, 3 ),
	45, 	Uvn( 124, 3 ),
	43, 	Uvn( 124, 119 ),
	44, 	Uvn( 0, 3 ),
	41, 	Uvn( 0, 119 ),
	StripL(4),
	54, 	Uvn( 128, 0 ),
	53, 	Uvn( 0, 0 ),
	64, 	Uvn( 128, 103 ),
	60, 	Uvn( 0, 103 ),
	StripL(4),
	65, 	Uvn( 0, 127 ),
	61, 	Uvn( 0, 7 ),
	48, 	Uvn( 128, 127 ),
	52, 	Uvn( 128, 7 ),
	StripL(4),
	57, 	Uvn( 128, 119 ),
	60, 	Uvn( 0, 119 ),
	51, 	Uvn( 128, 11 ),
	59, 	Uvn( 0, 11 ),
	StripL(4),
	58, 	Uvn( 116, 7 ),
	57, 	Uvn( 0, 3 ),
	52, 	Uvn( 116, 123 ),
	51, 	Uvn( 0, 123 ),
	StripL(4),
	79, 	Uvn( 124, 127 ),
	80, 	Uvn( 0, 127 ),
	75, 	Uvn( 120, 3 ),
	76, 	Uvn( 0, 3 ),
	StripL(4),
	48, 	Uvn( 116, 123 ),
	52, 	Uvn( 116, 7 ),
	47, 	Uvn( 0, 127 ),
	51, 	Uvn( 0, 3 ),
	StripL(4),
	62, 	Uvn( 0, 119 ),
	58, 	Uvn( 128, 119 ),
	61, 	Uvn( 0, 11 ),
	52, 	Uvn( 128, 11 ),
	StripL(6),
	57, 	Uvn( 0, 123 ),
	58, 	Uvn( 116, 123 ),
	64, 	Uvn( 0, 3 ),
	63, 	Uvn( 116, 3 ),
	54, 	Uvn( 0, 127 ),
	56, 	Uvn( 116, 127 ),
	StripL(3),
	50, 	Uvn( 132, 119 ),
	47, 	Uvn( 132, 3 ),
	66, 	Uvn( 4, 3 ),
	StripL(4),
	66, 	Uvn( 0, 127 ),
	47, 	Uvn( 128, 127 ),
	59, 	Uvn( 0, 7 ),
	51, 	Uvn( 128, 7 ),
	StripL(4),
	77, 	Uvn( 0, 75 ),
	78, 	Uvn( 128, 75 ),
	76, 	Uvn( 0, 131 ),
	75, 	Uvn( 128, 131 ),
	StripL(3),
	48, 	Uvn( 132, 3 ),
	49, 	Uvn( 132, 119 ),
	65, 	Uvn( 4, 3 ),
	StripL(4),
	50, 	Uvn( 0, 79 ),
	49, 	Uvn( 116, 79 ),
	47, 	Uvn( 0, 131 ),
	48, 	Uvn( 116, 131 ),
	StripL(3),
	62, 	Uvn( 0, 11 ),
	63, 	Uvn( 128, 119 ),
	58, 	Uvn( 128, 11 ),
	StripL(3),
	60, 	Uvn( 0, 11 ),
	57, 	Uvn( 128, 11 ),
	64, 	Uvn( 128, 119 ),
	StripL(4),
	55, 	Uvn( 0, 0 ),
	56, 	Uvn( 128, 0 ),
	62, 	Uvn( 0, 103 ),
	63, 	Uvn( 128, 103 ),
	StripL(4),
	71, 	Uvn( 0, 127 ),
	72, 	Uvn( 124, 127 ),
	67, 	Uvn( 0, 3 ),
	68, 	Uvn( 120, 3 ),
	StripL(4),
	69, 	Uvn( 128, 75 ),
	70, 	Uvn( 0, 75 ),
	68, 	Uvn( 128, 131 ),
	67, 	Uvn( 0, 131 ),
	StripL(6),
	70, 	Uvn( 0, 0 ),
	69, 	Uvn( 124, 3 ),
	82, 	Uvn( 0, 127 ),
	81, 	Uvn( 124, 123 ),
	77, 	Uvn( 0, 0 ),
	78, 	Uvn( 124, 3 ),
	CnkNull(),
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 51, 178, 178, 178 ),
	MAmbi( 255, 127, 127, 127 ),
	MSpec( 11, 255, 255, 255 ),
	CnkT_TID( FCL_U|FCL_V|FDA_100 ), _TID( FFM_BF, 8 ),
	CnkS( FST_UA|FST_DB|FST_ENV ), 142, _NB( UFO_0, 29 ),
	StripL(3),  5, 7, 8, 
	StripL(3),  13, 12, 10, 
	StripL(3),  30, 31, 34, 
	StripL(3),  32, 34, 33, 
	StripL(3),  31, 33, 34, 
	StripL(4),  37, 36, 39, 40, 
	StripL(4),  38, 35, 39, 37, 
	StripL(3),  39, 40, 38, 
	StripL(3),  42, 43, 46, 
	StripL(6),  44, 46, 45, 43, 44, 41, 
	StripL(4),  54, 53, 64, 60, 
	StripL(4),  65, 61, 48, 52, 
	StripL(4),  57, 60, 51, 59, 
	StripL(4),  58, 57, 52, 51, 
	StripL(4),  79, 80, 75, 76, 
	StripL(4),  48, 52, 47, 51, 
	StripL(4),  62, 58, 61, 52, 
	StripL(6),  57, 58, 64, 63, 54, 56, 
	StripL(3),  50, 47, 66, 
	StripL(4),  66, 47, 59, 51, 
	StripL(4),  77, 78, 76, 75, 
	StripL(3),  48, 49, 65, 
	StripL(4),  50, 49, 47, 48, 
	StripL(3),  62, 63, 58, 
	StripL(3),  60, 57, 64, 
	StripL(4),  55, 56, 62, 63, 
	StripL(4),  71, 72, 67, 68, 
	StripL(4),  69, 70, 68, 67, 
	StripL(6),  70, 69, 82, 81, 77, 78, 
	CnkNull(),
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 178, 178, 178 ),
	MAmbi( 255, 127, 127, 127 ),
	MSpec( 11, 255, 255, 255 ),
	CnkT_TID( FCL_U|FCL_V|FDA_100 ), _TID( FFM_BF, 8 ),
	CnkS_UVN( FST_DB ), 116, _NB( UFO_0, 9 ),
	StripL(4),
	16, 	Uvn( 256, 3 ),
	17, 	Uvn( 128, 3 ),
	15, 	Uvn( 256, 127 ),
	14, 	Uvn( 128, 127 ),
	StripL(4),
	20, 	Uvn( 128, 3 ),
	21, 	Uvn( 256, 3 ),
	18, 	Uvn( 128, 127 ),
	19, 	Uvn( 256, 127 ),
	StripL(4),
	33, 	Uvn( 124, 43 ),
	31, 	Uvn( 124, 131 ),
	32, 	Uvn( 248, 43 ),
	30, 	Uvn( 248, 131 ),
	StripL(3),
	84, 	Uvn( 128, 107 ),
	85, 	Uvn( 256, 107 ),
	83, 	Uvn( 192, 3 ),
	StripL(4),
	72, 	Uvn( 256, 127 ),
	73, 	Uvn( 256, 3 ),
	68, 	Uvn( 128, 127 ),
	84, 	Uvn( 128, 3 ),
	StripL(4),
	74, 	Uvn( 256, 3 ),
	79, 	Uvn( 256, 127 ),
	85, 	Uvn( 128, 3 ),
	75, 	Uvn( 128, 127 ),
	StripL(3),
	68, 	Uvn( 192, 127 ),
	84, 	Uvn( 128, 7 ),
	69, 	Uvn( 128, 127 ),
	StripL(6),
	85, 	Uvn( 128, 11 ),
	78, 	Uvn( 128, 127 ),
	83, 	Uvn( 256, 11 ),
	81, 	Uvn( 256, 127 ),
	84, 	Uvn( 128, 11 ),
	69, 	Uvn( 128, 127 ),
	StripL(3),
	75, 	Uvn( 128, 127 ),
	78, 	Uvn( 192, 127 ),
	85, 	Uvn( 128, 7 ),
	CnkNull(),
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 178, 178, 178 ),
	MAmbi( 255, 127, 127, 127 ),
	MSpec( 11, 255, 255, 255 ),
	CnkT_TID( FDA_100 ), _TID( FFM_BF, 6 ),
	CnkS_UVN( FST_DB ), 14, _NB( UFO_0, 1 ),
	StripL(4),
	15, 	Uvn( 0, 255 ),
	14, 	Uvn( 0, -512 ),
	19, 	Uvn( 1024, 255 ),
	18, 	Uvn( 1024, -512 ),
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 255, 255, 255 ),
	MAmbi( 255, 127, 127, 127 ),
	MSpec( 11, 255, 255, 255 ),
	CnkT_TID( FCL_V|FDA_100 ), _TID( FFM_BF, 10 ),
	CnkS_UVN( FST_IL|FST_IS ), 28, _NB( UFO_0, 2 ),
	StripL(4),
	25, 	Uvn( 512, 103 ),
	23, 	Uvn( 0, 103 ),
	24, 	Uvn( 512, 255 ),
	22, 	Uvn( 0, 255 ),
	StripL(4),
	28, 	Uvn( 0, 255 ),
	26, 	Uvn( 512, 255 ),
	29, 	Uvn( 0, 103 ),
	27, 	Uvn( 512, 103 ),
	CnkNull(),
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 178, 178, 178 ),
	MAmbi( 255, 127, 127, 127 ),
	MSpec( 0, 255, 255, 255 ),
	CnkT_TID( FCL_U|FCL_V|FDA_100 ), _TID( FFM_BF, 0 ),
	CnkS_UVN( FST_IS|FST_UA ), 14, _NB( UFO_0, 1 ),
	StripL(4),
	3, 	Uvn( 252, 251 ),
	2, 	Uvn( 252, 0 ),
	1, 	Uvn( 4, 251 ),
	0, 	Uvn( 4, 0 ),
	CnkEnd()
END

VLIST      vertex_ce_truck_hood[]
START
	CnkV_VN(0, 517),
	OffnbIdx(0, 86),
	VERT( 0xc0900000, 0x42426666, 0x41cecccd ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc0900000, 0x42220000, 0x41cecccd ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x40900000, 0x42426666, 0x41cecccd ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x40900000, 0x42220000, 0x41cecccd ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x42360000, 0x41accccc, 0xbe800000 ),
	NORM( 0xbf59c440, 0x00000000, 0x3f069651 ),
	VERT( 0x42360000, 0x41db9999, 0xbe800000 ),
	NORM( 0xbf26bb95, 0x3f2fb3eb, 0x3ea5b508 ),
	VERT( 0x425a0000, 0x41accccc, 0xbe800000 ),
	NORM( 0x3f59c440, 0x00000000, 0x3f069651 ),
	VERT( 0x425a0000, 0x41db9999, 0xbe800000 ),
	NORM( 0x3f26bb95, 0x3f2fb3eb, 0x3ea5b508 ),
	VERT( 0x42480000, 0x41accccc, 0xc1140000 ),
	NORM( 0x00000000, 0x3f17d3a5, 0xbf4e1e37 ),
	VERT( 0xc2360000, 0x41accccc, 0xbe800000 ),
	NORM( 0x3f59c440, 0x00000000, 0x3f069651 ),
	VERT( 0xc2360000, 0x41db9999, 0xbe800000 ),
	NORM( 0x3f26bb95, 0x3f2fb3eb, 0x3ea5b508 ),
	VERT( 0xc25a0000, 0x41accccc, 0xbe800000 ),
	NORM( 0xbf59c440, 0x00000000, 0x3f069651 ),
	VERT( 0xc25a0000, 0x41db9999, 0xbe800000 ),
	NORM( 0xbf26bb95, 0x3f2fb3eb, 0x3ea5b508 ),
	VERT( 0xc2480000, 0x41accccc, 0xc1140000 ),
	NORM( 0x00000000, 0x3f17d3a5, 0xbf4e1e37 ),
	VERT( 0x41c00000, 0x42203333, 0x41c60000 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41c80000, 0xc0366666, 0x41c60000 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41e00000, 0xc0366666, 0x41c60000 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41d7f5b0, 0x42203333, 0x41c60000 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1c00000, 0x42203333, 0x41c60000 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1c80000, 0xc0366666, 0x41c60000 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1d7f5ae, 0x42203333, 0x41c60000 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1e00000, 0xc0366666, 0x41c60000 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41f80000, 0x411e6666, 0x4186cccc ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41f80000, 0x419acccd, 0x4186cccc ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x42500000, 0x411e6666, 0x4186cccc ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x42500000, 0x419acccd, 0x4186cccc ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1f80001, 0x411e6666, 0x4186ccce ),
	NORM( 0xb4430c32, 0x00000000, 0x3f800000 ),
	VERT( 0xc1f80001, 0x419acccd, 0x4186ccce ),
	NORM( 0xb4430c32, 0x00000000, 0x3f800000 ),
	VERT( 0xc2500000, 0x411e6666, 0x4186cccc ),
	NORM( 0xb4430c32, 0x00000000, 0x3f800000 ),
	VERT( 0xc2500000, 0x419acccd, 0x4186cccc ),
	NORM( 0xb4430c32, 0x00000000, 0x3f800000 ),
	VERT( 0xc0900000, 0x42220000, 0x41ce0000 ),
	NORM( 0xbf1a4c98, 0x00000000, 0x3f4c4614 ),
	VERT( 0xc0900000, 0x42426666, 0x41ce0000 ),
	NORM( 0xbf345910, 0x3f22e8b0, 0x3ea0e394 ),
	VERT( 0x40900000, 0x42220000, 0x41ce0000 ),
	NORM( 0x3f1a4c98, 0x00000000, 0x3f4c4614 ),
	VERT( 0x40900000, 0x42426666, 0x41ce0000 ),
	NORM( 0x3f345910, 0x3f22e8b0, 0x3ea0e394 ),
	VERT( 0x00000000, 0x42379999, 0x419e0000 ),
	NORM( 0x00000000, 0x3f0d200b, 0xbf559670 ),
	VERT( 0xc1f00001, 0x40799998, 0x41860000 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0xc1efffff, 0x41accccc, 0xbe7fff80 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0xc1f00001, 0x41accccc, 0x41860000 ),
	NORM( 0x00000000, 0x3f3504f4, 0x3f3504f2 ),
	VERT( 0xc2580000, 0x40799998, 0x41860000 ),
	NORM( 0xbee03b9c, 0x00000000, 0x3f6624ab ),
	VERT( 0xc2580000, 0x41accccc, 0x41860000 ),
	NORM( 0xbf13cd3a, 0x3f13cd3a, 0x3f13cd3a ),
	VERT( 0xc2580000, 0x41accccc, 0xbe800040 ),
	NORM( 0xbee9a434, 0x3f63ca99, 0x00000000 ),
	VERT( 0x41f00000, 0x40799998, 0x41860000 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x41f00000, 0x41accccc, 0xbe800000 ),
	NORM( 0x00000000, 0x3f800000, 0x00000000 ),
	VERT( 0x41f00000, 0x41accccc, 0x41860000 ),
	NORM( 0x00000000, 0x3f3504f3, 0x3f3504f3 ),
	VERT( 0x42580000, 0x40799998, 0x41860000 ),
	NORM( 0x3ee03b9b, 0x00000000, 0x3f6624ab ),
	VERT( 0x42580000, 0x41accccc, 0x41860000 ),
	NORM( 0x3f13cd3a, 0x3f13cd3a, 0x3f13cd3a ),
	VERT( 0x42580000, 0x41accccc, 0xbe800000 ),
	NORM( 0x3ee9a434, 0x3f63ca99, 0x00000000 ),
	VERT( 0xc2640000, 0x3f999998, 0x419e0000 ),
	NORM( 0xbf1fe789, 0x3e98448d, 0x3f38da13 ),
	VERT( 0x42640000, 0x3f999998, 0x419e0000 ),
	NORM( 0x3f232cf1, 0x3e9810e4, 0x3f360353 ),
	VERT( 0x42640000, 0xc0366666, 0x419e0000 ),
	NORM( 0x3f3504f3, 0x00000000, 0x3f3504f3 ),
	VERT( 0xc2640000, 0xc0366666, 0x419e0000 ),
	NORM( 0xbf3504f3, 0x00000000, 0x3f3504f3 ),
	VERT( 0xc25e0000, 0x41accccc, 0xbe800000 ),
	NORM( 0xbf17662a, 0x3f3eeb65, 0x3e9d05e7 ),
	VERT( 0x425e0000, 0x41accccc, 0xbe800000 ),
	NORM( 0x3f189eaf, 0x3f3f507d, 0x3e9639e5 ),
	VERT( 0xc2640000, 0xc0b19999, 0xc23d0000 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc2640000, 0xc0b19999, 0xc2750000 ),
	NORM( 0xbf3504f3, 0x00000000, 0xbf3504f3 ),
	VERT( 0x42640000, 0xc0b19999, 0xc23d0000 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x42640000, 0xc0b19999, 0xc2750000 ),
	NORM( 0x3f3504f3, 0x00000000, 0xbf3504f3 ),
	VERT( 0xc25e0000, 0x41accccc, 0xc2150000 ),
	NORM( 0xbf1b81ec, 0x3f457d1c, 0xbe41f968 ),
	VERT( 0x425e0000, 0x41accccc, 0xc2150000 ),
	NORM( 0x3f1b81ec, 0x3f457d1c, 0xbe41f968 ),
	VERT( 0xc2640000, 0x41173333, 0xbe800000 ),
	NORM( 0xbf7efb7a, 0x3da3aa32, 0x3d212e37 ),
	VERT( 0xc2640000, 0x41173333, 0xc2150000 ),
	NORM( 0xbf7ed563, 0x3dc32f3b, 0xbb46f4bc ),
	VERT( 0x42640000, 0x41173333, 0xbe800000 ),
	NORM( 0x3f7f64b7, 0x3d8be1ac, 0xbc07437d ),
	VERT( 0x42640000, 0x41173333, 0xc2150000 ),
	NORM( 0x3f7ed563, 0x3dc32f3c, 0xbb46f4bc ),
	VERT( 0x42640000, 0x40fe6666, 0xc2750000 ),
	NORM( 0x3f1c9532, 0x3ece2d3c, 0xbf2e543d ),
	VERT( 0xc2640000, 0x40fe6666, 0xc2750000 ),
	NORM( 0xbf1c9532, 0x3ece2d3c, 0xbf2e543d ),
	VERT( 0x42640000, 0xc0366666, 0x411c0000 ),
	NORM( 0x3f7fe2b0, 0x3ce31101, 0xbc37ec7e ),
	VERT( 0xc2640000, 0xc0366666, 0x411c0000 ),
	NORM( 0xbf7f63e6, 0x3d323bd3, 0x3d5b3a38 ),
	VERT( 0xc2280000, 0x42323333, 0xc2750000 ),
	NORM( 0xbf6ad79f, 0x3ebb757f, 0x3e1ffe9c ),
	VERT( 0xc1f00000, 0x42203333, 0x419e0000 ),
	NORM( 0xbf64bc7b, 0x3eac524d, 0x3e983608 ),
	VERT( 0xc1d80000, 0x422ccccc, 0x419e0000 ),
	NORM( 0xbecd1ef9, 0x3f603b03, 0x3e89aaa3 ),
	VERT( 0xc21c0000, 0x423ecccc, 0xc2750000 ),
	NORM( 0xbee9f1eb, 0x3f61ddf3, 0x3de785b7 ),
	VERT( 0xc2280000, 0xc0366666, 0xc2750000 ),
	NORM( 0xbf7d3c70, 0x00000000, 0x3e1610da ),
	VERT( 0xc1f00000, 0xc0366666, 0x419e0000 ),
	NORM( 0xbf742432, 0x00000000, 0x3e9a0699 ),
	VERT( 0xc1e00000, 0xc0366666, 0x41c60000 ),
	NORM( 0xbf64ed5d, 0x00000000, 0x3ee5286d ),
	VERT( 0x41e00000, 0xc0366666, 0x41c60000 ),
	NORM( 0x3f64e084, 0x3cab9572, 0x3ee51b86 ),
	VERT( 0x41f00000, 0x42203333, 0x419e0000 ),
	NORM( 0x3f644750, 0x3eaf0056, 0x3e97e6d6 ),
	VERT( 0x42280000, 0x42323333, 0xc2750000 ),
	NORM( 0x3f6ad79f, 0x3ebb757f, 0x3e1ffe9c ),
	VERT( 0x421c0000, 0x423ecccc, 0xc2750000 ),
	NORM( 0x3ee38352, 0x3f638441, 0x3de6b4e2 ),
	VERT( 0x41d80000, 0x422ccccc, 0x419e0000 ),
	NORM( 0x3ec33acf, 0x3f624962, 0x3e8a96a9 ),
	VERT( 0x41f00000, 0xc0366666, 0x419e0000 ),
	NORM( 0x3f742107, 0x3c2dc551, 0x3e9a022b ),
	VERT( 0x42280000, 0xc0366666, 0xc2750000 ),
	NORM( 0x3f7d3c70, 0x00000000, 0x3e1610da ),
	VERT( 0x00000000, 0x42379999, 0x419e0000 ),
	NORM( 0xbc9afc54, 0x3f77762c, 0x3e82c57e ),
	VERT( 0x00000000, 0x42499999, 0xc2750000 ),
	NORM( 0xbc79acb2, 0x3f7f7b86, 0x3d7cb5d7 ),
	VERT( 0x00000000, 0x42305b0d, 0x41c60000 ),
	NORM( 0xbc608909, 0x3f0f2fdf, 0x3f542e94 ),
	VERT( 0xc1d7f5ae, 0x42203333, 0x41c60000 ),
	NORM( 0xbf226916, 0x3f0bdf14, 0x3f0bfb44 ),
	VERT( 0x41d7f5b0, 0x42203333, 0x41c60000 ),
	NORM( 0x3f1e2f2e, 0x3f0fac02, 0x3f0cf7ee ),
	CnkEnd()
END

CNKMODEL   model_ce_truck_hood[]
START
VList      vertex_ce_truck_hood,
PList      strip_ce_truck_hood,
Center     0.000000F,  22.424999F, -17.700001F,
Radius     76.994827F,
END

CNKOBJECT  object_ce_truck_hood[]
START
EvalFlags ( 0x000000d7 ),
CNKModel   model_ce_truck_hood,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END

DEFAULT_START

#ifndef DEFAULT_OBJECT_NAME
#define DEFAULT_OBJECT_NAME object_ce_truck_hood
#endif

DEFAULT_END
