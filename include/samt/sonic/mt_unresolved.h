/*
*   SAMT for Sonic Adventure 2 (PC, 2012) - '/sonic/mt_unresolved.h'
*
*   Description:
*     Header for any game definitions that have not yet found a place elsewhere.
*/
#ifndef H_SA2B_MTUNRESOLVED
#define H_SA2B_MTUNRESOLVED

/********************************/
/*  Includes                    */
/********************************/
/****** Ninja ***********************************************************************************/
#include <samt/ninja/njcommon.h>    /* ninja common                                             */

/****** Game ************************************************************************************/
#include <samt/sonic/sound.h>       /* se def                                                   */
#include <samt/sonic/uvcng.h>       /* uv change info                                           */

EXTERN_START

/********************************/
/*  Enums                       */
/********************************/
/****** Unknown (CHanGe?) ***********************************************************************/
enum
{
    CHG_KIHON,                      /* base                                                     */
    CHG_SONIC,                      /* sonic                                                    */
    CHG_TAILS,                      /* tails                                                    */
    CHG_KNUCKLES,                   /* knuckles                                                 */
    CHG_CHAO,                       /* chao                                                     */

    CHG_MAX,                        /* enum count                                               */
};

/****** Sound Enums *****************************************************************************/
/*
*   Common, System
*/
enum
{
    SN_CURSOR           = TONE(SNB_SY,  0),
    SN_DECIDE           = TONE(SNB_SY,  1),
    SN_PAUSE            = TONE(SNB_SY,  2),
    SN_COUNT            = TONE(SNB_SY,  3),
    SN_REGISTER         = TONE(SNB_SY,  4),
    SN_RING             = TONE(SNB_SY,  5),
    SN_ITEMGET          = TONE(SNB_SY,  6),
    SN_THROW            = TONE(SNB_SY,  7),
    SN_WNDOPEN          = TONE(SNB_SY,  8),
    SN_WNDCLOSE         = TONE(SNB_SY,  9),
    SN_TIMLIM           = TONE(SNB_SY, 10),
    SN_OMOSPK           = TONE(SNB_SY, 11),
    SN_OMOSB            = TONE(SNB_SY, 12),
    SN_ITEMBOX          = TONE(SNB_SY, 13),
    SN_SWITCH           = TONE(SNB_SY, 14),
    SN_MMLGET           = TONE(SNB_SY, 15),
    SN_MMLAPR           = TONE(SNB_SY, 16),
    SN_CDGET            = TONE(SNB_SY, 17),
    SN_GOCG             = TONE(SNB_SY, 18),
    SN_HINTBOX          = TONE(SNB_SY, 19),
    SN_DAMAGE           = TONE(SNB_SY, 20),
    SN_ENEEXP           = TONE(SNB_SY, 21),
    SN_ANCWHI           = TONE(SNB_SY, 22),
    SN_OMOFLY           = TONE(SNB_SY, 23),
    SN_OMOEXP           = TONE(SNB_SY, 24),
    SN_VSSP             = TONE(SNB_SY, 25),
    SN_ITEMBARRIER      = TONE(SNB_SY, 26),
    SN_ITEMLUP          = TONE(SNB_SY, 27),
    SN_SCORING          = TONE(SNB_SY, 28),
    SN_RANKING          = TONE(SNB_SY, 29),
    SN_TYPEWRITER       = TONE(SNB_SY, 30),
    SN_TANSAKUKI        = TONE(SNB_SY, 31),
    SN_MUSEN1           = TONE(SNB_SY, 32),
    SN_MUSEN2           = TONE(SNB_SY, 33),
};
/*
*   Common, Game
*/
enum
{
    SN_SPRING           = TONE(SNB_GM,  0),
    SN_SAVE             = TONE(SNB_GM,  1),
    SN_SWITCH2          = TONE(SNB_GM,  2),
    SN_DUSHPANEL        = TONE(SNB_GM,  3),
    SN_BIGHAMMER        = TONE(SNB_GM,  4),
    SN_ROCKETSET        = TONE(SNB_GM,  5),
    SN_BALOONCRK        = TONE(SNB_GM,  6),
    SN_RAIL_TOUCH       = TONE(SNB_GM,  7),
    SN_EME              = TONE(SNB_GM,  8),
    SN_EMERADAR         = TONE(SNB_GM,  9),
    SN_MMLOUT           = TONE(SNB_GM, 10),
    SN_SCAFFOLD         = TONE(SNB_GM, 11),
    SN_BOMB_DNM         = TONE(SNB_GM, 12),
    SN_CHAOCLY          = TONE(SNB_GM, 13),
    SN_CHAOLAUGH        = TONE(SNB_GM, 14),
    SN_RING_APPR        = TONE(SNB_GM, 15),
    SN_EXPL_WCONT       = TONE(SNB_GM, 16),
    SN_EXPL_ICONT       = TONE(SNB_GM, 17),
    SN_BIGRG_FLOAT      = TONE(SNB_GM, 18),
    SN_BIGRG_GET        = TONE(SNB_GM, 19),
    SN_BIGRG_WARP       = TONE(SNB_GM, 20),
    SN_GOTSLITE         = TONE(SNB_GM, 21),
    SN_STONEDOOR        = TONE(SNB_GM, 22),
    SN_WARP_IN          = TONE(SNB_GM, 23),
    SN_WARP_OUT         = TONE(SNB_GM, 24),
    SN_RKT_SHOOT        = TONE(SNB_GM, 25),
    SN_IRONBAWL         = TONE(SNB_GM, 26),
    SN_RAIL_RUN         = TONE(SNB_GM, 27),
    SN_RAIL_FAST        = TONE(SNB_GM, 28),
    SN_REEL             = TONE(SNB_GM, 29),
    SN_WSLPLINTH        = TONE(SNB_GM, 30),
    SN_WARP_APPR        = TONE(SNB_GM, 31),
    SN_ELEV_MOVE        = TONE(SNB_GM, 32),
    SN_ELEV_STOP        = TONE(SNB_GM, 33),
    SN_ROKKAKU          = TONE(SNB_GM, 34),
    SN_SPACEALARM1      = TONE(SNB_GM, 35),
    SN_SPACEALARM2      = TONE(SNB_GM, 36),
};
/*
*   Character, Speed
* 
*   S  = Sonic
*   W  = shadoW
*   A  = Amy
*   MS = Metal Sonic
*/
enum
{
    SN_S_JUMP           = TONE(SNB_CH,  0),
    SN_W_JUMP           = TONE(SNB_CH,  1),
    SN_S_BRAKE          = TONE(SNB_CH,  2),
    SN_S_LANDING        = TONE(SNB_CH,  3),
    SN_S_HOLD           = TONE(SNB_CH,  4),
    SN_S_WHISLE         = TONE(SNB_CH,  5),
    SN_W_WHISLE         = TONE(SNB_CH,  6),
    SN_S_JUMPDASH       = TONE(SNB_CH,  7),
    SN_S_SST12          = TONE(SNB_CH,  8),
    SN_S_SST3           = TONE(SNB_CH,  9),
    SN_S_BNDATK         = TONE(SNB_CH, 10),
    SN_S_SPINATK        = TONE(SNB_CH, 11),
    SN_S_THROUGH        = TONE(SNB_CH, 12),
    SN_W_TIMSTPSP       = TONE(SNB_CH, 13),
    SN_S_SPINCHG        = TONE(SNB_CH, 14),
    SN_S_TORNADO        = TONE(SNB_CH, 15),
    SN_W_SPEAR          = TONE(SNB_CH, 16),
    SN_S_LTCHG          = TONE(SNB_CH, 17),
    SN_S_LTDASH         = TONE(SNB_CH, 18),
    SN_S_TIMSTPST       = TONE(SNB_CH, 19),
    SE_A_JUMP           = TONE(SNB_CH, 20),
    SE_A_BRAKE          = TONE(SNB_CH, 21),
    SE_A_LANDING        = TONE(SNB_CH, 22),
    SE_MS_JUMP          = TONE(SNB_CH, 23),
    SE_MS_BRAKE         = TONE(SNB_CH, 24),
    SE_MS_HOVER         = TONE(SNB_CH, 25),
    SE_MS_LANDING       = TONE(SNB_CH, 26),
    SE_MS_GUARD         = TONE(SNB_CH, 27),
    SE_MS_JUMPATTACK    = TONE(SNB_CH, 28),
};
/*
*   Character, Hunter
* 
*   K  = Knuckles
*   R  = Rouge
*   CS = ChaoS
*/
enum
{
    SN_K_JUMP           = TONE(SNB_CH,  0),
    SN_R_JUMP           = TONE(SNB_CH,  1),
    SN_K_BRAKE          = TONE(SNB_CH,  2),
    SN_K_LANDING        = TONE(SNB_CH,  3),
    SN_K_HOLD           = TONE(SNB_CH,  4),
    SN_N_WHISLE         = TONE(SNB_CH,  5),
    SN_R_WHISLE         = TONE(SNB_CH,  6),
    SN_K_GLIDEON        = TONE(SNB_CH,  7),
    SN_R_GLIDEON        = TONE(SNB_CH,  8),
    SN_K_CLIMB          = TONE(SNB_CH,  9),
    SN_K_DIG            = TONE(SNB_CH, 10),
    SN_K_PUNCH12        = TONE(SNB_CH, 11),
    SN_K_PUNCH3         = TONE(SNB_CH, 12),
    SN_K_KICK12         = TONE(SNB_CH, 13),
    SN_K_KICK3          = TONE(SNB_CH, 14),
    SN_K_GLASSES        = TONE(SNB_CH, 15),
    SN_K_GOOUT          = TONE(SNB_CH, 16),
    SN_K_HAMMER         = TONE(SNB_CH, 17),
    SN_K_TNDARROW       = TONE(SNB_CH, 18),
    SN_R_BLKWING        = TONE(SNB_CH, 19),
    SN_K_PWFLSH         = TONE(SNB_CH, 20),
    SN_K_GLIDE          = TONE(SNB_CH, 21),
    SN_K_FALLDIG        = TONE(SNB_CH, 22),
    SE_CS_JUMP          = TONE(SNB_CH, 23),
    SE_CS_ASHIOTO       = TONE(SNB_CH, 24),
    SE_CS_PUNCHI        = TONE(SNB_CH, 25),
    SE_CS_UPPER         = TONE(SNB_CH, 26),
    SE_CS_SCREW         = TONE(SNB_CH, 27),
    SE_CS_STRIKE        = TONE(SNB_CH, 28),
    SE_CS_BIND          = TONE(SNB_CH, 29),
};

/****** Egg Golem Parts *************************************************************************/
typedef enum
{
    GOLEM_PART_CHEST,               /* golem torso                                              */
    GOLEM_PART_HEAD,                /* golem head                                               */
    GOLEM_PART_R_ARM_U,             /* golem right arm, upper                                   */
    GOLEM_PART_R_ARM_L,             /* golem right arm, lower                                   */
    GOLEM_PART_R_HAND,              /* golem right hand                                         */
    GOLEM_PART_L_ARM_U,             /* golem left arm, upper                                    */
    GOLEM_PART_L_ARM_L,             /* golem left arm, lower                                    */
    GOLEM_PART_L_HAND,              /* golem left hand                                          */
    GOLEM_PART_WAIST,               /* golem waist                                              */

    NUM_GOLEM_PARTS,                /* enum count                                               */
}
ENUM_GOLEM_PARTS;

/****** Advertise Element "LiST" (?) ************************************************************/
enum
{
    LST_E_SPACE,
    LST_E_FILE,
    LST_E_OK,
    LST_E_CANCEL,
    LST_E_NEWFILE,
    LST_E_NOSPACE,
    LST_E_WARNING,
    LST_E_DELETE,
    LST_E_LAST,
    LST_E_TIME,
    LST_E_YAJIRUSI,
    LST_E_CURSOR1,
    LST_E_CURSOR2,
    LST_SPACE,
    LST_FILE,
    LST_OK,
    LST_CANCEL,
    LST_NEW1,
    LST_NOSPACE1,
    LST_WARNING,
    LST_DELETE,
    LST_LAST,
    LST_TIME,
    LST_YAJIRUSI,
    LST_CURSOR1,
    LST_CURSOR2,
    LST_NOSPACE2,
    LST_NEW2,
    LST_ZOKKOU,
    LST_SHADOW,
    LST_EGGMAN,
    LST_ROUGE,
    LST_SONIC,
    LST_TAILS,
    LST_KNUCKLES,
    LST_MEMORY_BAR_BG,
    LST_MEMORY_BAR,
    LST_STRING_BACK,
    LST_WINDOW1,
    LST_WINDOW2,
    LST_WINDOW3,
    LST_J_CITYESCAPE,
    LST_J_WILD_CANYON,
    LST_J_PRISONLANE,
    LST_J_METAL_HARBOR,
    LST_J_GREEN_FOREST,
    LST_J_PUMPKIN_HILL,
    LST_J_MISSION_0STREET,
    LST_J_AQUATIC_MINE,
    LST_J_ROUTE101,
    LST_J_HIDDEN_BASE,
    LST_J_PYRAMID_CAVE,
    LST_J_DEATH_CHAMBER,
    LST_J_ETERNAL_ENGINE,
    LST_J_METEOR_HERD,
    LST_J_CRAZY_GADGET,
    LST_J_FINAL_RUSH,
    LST_J_IRON_GATE,
    LST_J_DRY_LAGOON,
    LST_J_SAND_OCEAN,
    LST_J_RADICAL_HIGHWAY,
    LST_J_EGG_QUARTER,
    LST_J_LOST_COLONY,
    LST_J_WEAPONS_BED,
    LST_J_SECURITYHALL,
    LST_J_WHITE_JUNGLE,
    LST_J_ROUTE280,
    LST_J_SKY_RAIL,
    LST_J_MAD_SPACE,
    LST_J_COSMIC_WALL,
    LST_J_FINAL_CHASE,
    LST_J_CANNONS_CORE,
    LST_J_GREEN_HILL,
    LST_J_CHAO_WORLD,
    LST_E_CITYESCAPE,
    LST_E_WILD_CANYON,
    LST_E_PRISONLANE,
    LST_E_METAL_HARBOR,
    LST_E_GREEN_FOREST,
    LST_E_PUMPKIN_HILL,
    LST_E_MISSION_0STREET,
    LST_E_AQUATIC_MINE,
    LST_E_ROUTE101,
    LST_E_HIDDEN_BASE,
    LST_E_PYRAMID_CAVE,
    LST_E_DEATH_CHAMBER,
    LST_E_ETERNAL_ENGINE,
    LST_E_METEOR_HERD,
    LST_E_CRAZY_GADGET,
    LST_E_FINAL_RUSH,
    LST_E_IRON_GATE,
    LST_E_DRY_LAGOON,
    LST_E_SAND_OCEAN,
    LST_E_RADICAL_HIGHWAY,
    LST_E_EGG_QUARTER,
    LST_E_LOST_COLONY,
    LST_E_WEAPONS_BED,
    LST_E_SECURITYHALL,
    LST_E_WHITE_JUNGLE,
    LST_E_ROUTE280,
    LST_E_SKY_RAIL,
    LST_E_MAD_SPACE,
    LST_E_COSMIC_WALL,
    LST_E_FINAL_CHASE,
    LST_E_CANNONS_CORE,
    LST_E_GREEN_HILL,
    LST_E_CHAO_WORLD,
    LST_ICON_FORVM,
    LST_ICON_FORVM_I,
    LST_WINDOW4,
    LST_J_FILEOVER1,
    LST_J_FILEOVER2,
    LST_E_FILEOVER1,
    LST_E_FILEOVER2,

//  LST_MAX,    duplicate
};

enum
{
    LST_SEL_BEGINNER,
    LST_BEGINNER,
    LST_SEL_STANDARD,
    LST_STANDARD,
    LST_SEL_EXPERT,
    LST_EXPERT,
    LST_SEL_DOWNLOAD,
    LST_DOWNLOAD,
    LST_KART_TITLE_1,
    LST_KART_TITLE_2,
    LST_KART_TITLE_3,
    LST_SPD_ACL_BRK_GRP,
    LST_SONIC,
    LST_TAILS,
    LST_SHADOW,
    LST_EGGMAN,
    LST_KNUCKLES,
    LST_ROUGE,
    LST_PANEL_RED,
    LST_PANEL_BLACK,
    LST_EX_SONIC,
    LST_EX_TAILS,
    LST_EX_SHADOW,
    LST_EX_EGGMAN,
    LST_EX_KNUCKLES,
    LST_EX_ROUGE,
    LST_SELCURSOR,
    LST_HISELCURSOR,
    LST_COURSE_SELECT_T1,
    LST_COURSE_SELECT_T2,
    LST_COURSE_SELECT_T3,
    LST_DOWNLOAD_T1,
    LST_DOWNLOAD_T2,
    LST_YAJIRUSI,
    LST_TIME_WAKU1,
    LST_TIME_WAKU2,
    LST_EMBLEM_WAKU,
    LST_JUNI_WAKU,
    LST_1ST,
    LST_2ND,
    LST_3RD,
    LST_BIG_WAKU1,
    LST_BIG_WAKU2,
    LST_BIG_WAKU3,
    LST_CURSOR_HALF,
    LST_LINE,
    LST_CURSOR_CHARA,
    LST_MENU_TSCB,
    LST_MENU_TSCB_E,
    LST_DOWNLOAD_EVENT1,
    LST_DOWNLOAD_EVENT2,
    LST_DOWNLOAD_EVENT3,
    LST_DOWNLOAD_EVENT4,
    LST_DL_CURSOR,
    LST_DL_WIN_A1,
    LST_DL_WIN_A2,
    LST_DL_WIN_B1,
    LST_DL_WIN_B2,
    LST_SEL_GREEN,
    LST_HI_SEL_GREEN,
    LST_CAN_GREEN,
    LST_HI_CAN_GREEN,
    LST_BATU,
    LST_E_SEL_GREEN,
    LST_E_HI_SEL_GREEN,
    LST_E_CAN_GREEN,
    LST_E_HI_CAN_GREEN,

//  LST_MAX,    duplicate
};

enum
{
    LST_SHARE_NUM_0,
    LST_SHARE_NUM_1,
    LST_SHARE_NUM_2,
    LST_SHARE_NUM_3,
    LST_SHARE_NUM_4,
    LST_SHARE_NUM_5,
    LST_SHARE_NUM_6,
    LST_SHARE_NUM_7,
    LST_SHARE_NUM_8,
    LST_SHARE_NUM_9,
    LST_SHARE_NUM_C,
    LST_SHARE_NUM_SLASH,
    LST_SHARE_NUM_MINUS,
    LST_SHARE_EMBLEM,

    LST_SHARE_MAX,
};

enum
{
    LST_BACK_BLUE,
    LST_BACK_RED,
    LST_TITLE1,
    LST_TITLE2,
    LST_TITLE3,
    LST_JP_SONIC,
    LST_JP_SHADOW,
    LST_JP_KNUCKLES,
    LST_JP_ROUGE,
    LST_JP_TAILS,
    LST_JP_EGGMAN,
    LST_JP_AMY,
    LST_JP_METALSONIC,
    LST_JP_TIKAL,
    LST_JP_CHAOS,
    LST_JP_DARKWALKER,
    LST_JP_CHAOWALKER,
    LST_JP_SUPERSONIC,
    LST_JP_SUPERSHADOW,
    LST_EN_SONIC,
    LST_EN_SHADOW,
    LST_EN_KNUCKLES,
    LST_EN_ROUGE,
    LST_EN_TAILS,
    LST_EN_EGGMAN,
    LST_EN_AMY,
    LST_EN_METALSONIC,
    LST_EN_TIKAL,
    LST_EN_CHAOS,
    LST_EN_DARKWALKER,
    LST_EN_CHAOWALKER,
    LST_EN_SUPERSONIC,
    LST_EN_SUPERSHADOW,
    LST_ICON_RANDOM,
    LST_ICON_RACE,
    LST_ICON_HUNT,
    LST_ICON_SHOOT,
    LST_ICON_CHAORACE,
    LST_ICON_KARATE,
    LST_ICON_KART,
    LST_ICON_BACK,
    LST_NUMBER0,
    LST_NUMBER1,
    LST_NUMBER2,
    LST_NUMBER3,
    LST_NUMBER4,
    LST_NUMBER5,
    LST_NUMBER6,
    LST_NUMBER7,
    LST_NUMBER8,
    LST_NUMBER9,
    LST_SELECT_1P,
    LST_SELECT_2P,
    LST_SELECT_1P2,
    LST_SELECT_2P2,
    LST_WINBACK_KADO,
    LST_STAR_ON,
    LST_STAR_OFF,
    LST_WINDOW_AMY,
    LST_WINDOW_CHAO,
    LST_WINDOW_DCHAO,
    LST_WINDOW_EGGMAN,
    LST_WINDOW_KNUCKLES,
    LST_WINDOW_METAL,
    LST_WINDOW_ROUGE,
    LST_WINDOW_SHADOW,
    LST_WINDOW_SONIC,
    LST_WINDOW_SSHADOW,
    LST_WINDOW_SSONIC,
    LST_WINDOW_TAILS,
    LST_WINDOW_TICAL,
    LST_WINDOW_ZERO,
    LST_YAJIRUSI,
    LST_GURUGURU_CHANGE,
    LST_SELECT_1P_F,
    LST_SELECT_2P_F,
    LST_SELECT_1P2_F,
    LST_SELECT_2P2_F,
    LST_SELECT_1P_S,
    LST_SELECT_2P_S,
    LST_SELECT_1P2_S,
    LST_SELECT_2P2_S,
    LST_SELECT_1P_G,
    LST_SELECT_2P_G,
    LST_SELECT_1P2_G,
    LST_SELECT_2P2_G,
    LST_SELECT_1P_I,
    LST_SELECT_2P_I,
    LST_SELECT_1P2_I,
    LST_SELECT_2P2_I,

//  LST_MAX, duplicate
};

/****** Sound Test ******************************************************************************/
enum
{
    S_TEST_CATEGORY_MAIN,
    S_TEST_CATEGORY_CHARA,
    S_TEST_CATEGORY_ACT,
    S_TEST_CATEGORY_CHAO,
    S_TEST_CATEGORY_EVENT,
    S_TEST_CATEGORY_JINGLE,
    S_TEST_CATEGORY_ETC,

    S_TEST_CATEGORY_MAX,
};

/****** Battle (2P) *****************************************************************************/
enum
{
    BATTLE_ICON_RANDOM,
    BATTLE_ICON_ACTIONRACE,
    BATTLE_ICON_HUNTING,
    BATTLE_ICON_SHOOTING,
    BATTLE_ICON_CHAORACE,
    BATTLE_ICON_KARATE,
    BATTLE_ICON_CARTRACE,

    BATTLE_ICON_MAX,
};

enum
{
    BATTLE_CHARA_SONIC,
    BATTLE_CHARA_SHADOW,
    BATTLE_CHARA_TAILS,
    BATTLE_CHARA_EGGMAN,
    BATTLE_CHARA_KNUCKLES,
    BATTLE_CHARA_ROUGE,
    BATTLE_CHARA_AMY,
    BATTLE_CHARA_METALSONIC,
    BATTLE_CHARA_TIKAL,
    BATTLE_CHARA_CHAOS,
    BATTLE_CHARA_CHAOWALKER,
    BATTLE_CHARA_DARKWALKER,
    BATTLE_CHARA_NORMAL_CHAO,
    BATTLE_CHARA_HERO_CHAO,
    BATTLE_CHARA_DARK_CHAO,

    BATTLE_CHARA_MAX,
};

/****** Textures ********************************************************************************/
enum
{
    TEX_FILESELECT_ICON1,
    TEX_FILESELECT_SUUJI,
    TEX_FILEWINDOW_PLATE_L0,
    TEX_FILEWINDOW_PLATE_L1,
    TEX_FILEWINDOW_PLATE_L2,
    TEX_FILEWINDOW_PL_SPR,
    TEX_FW_ASC000,
    TEX_FW_ASC00_E,
    TEX_FW_ASC00_J,
    TEX_GC_FRONT01,
    TEX_GC_FRONT02,
    TEX_GC_FRONT03,
    TEX_GC_FRONT04,
    TEX_GC_MEMORY01,
    TEX_GC_MEMORY02,
    TEX_GC_MEMORY03,
    TEX_GC_SLOT_EN,
    TEX_GC_SLOT_JP,
    TEX_SOUNDTEST_SONGNAME,
};

enum
{
    TEX_DL_EVENT_ASC0,
    TEX_DL_EVENT_ASC0_E,
    TEX_DL_EVENT_ASC1,
    TEX_DL_EVENT_ASC2,
    TEX_DL_EVENT_BATU,
    TEX_DL_EVENT_BUTTON,
    TEX_DL_EVENT_BUTTON_E,
    TEX_DL_EVENT_WINDOW_E,
    TEX_DL_EVENT_WINDOW_J,
    TEX_KARTRACE_BUTTON,
    TEX_KARTRACE_BUTTON_BG,
    TEX_KARTRACE_CSOL,
    TEX_KARTRACE_SPR,
    TEX_KARTRACE_SPR1,
    TEX_KARTRACE_SPRX,
    TEX_KARTRACE_TEX_BLUE,
    TEX_KARTRACE_TITLE,
    TEX_KARTRACE_WAKU0,
    TEX_KARTRACE_WAKU1,
};

enum
{
    TEX_AD_EMBLEM_MINI,
    TEX_FILESELECT_SUUJI,
};

enum
{
    TEX_1P_CURSOR01,
    TEX_1P_CURSOR02,
    TEX_2P_BACK_BLUE,
    TEX_2P_BACK_RED,
    TEX_2P_CHARA_EN01,
    TEX_2P_CHARA_EN02,
    TEX_2P_CHARA_JP01,
    TEX_2P_CHARA_JP02,
    TEX_2P_CURSOR01,
    TEX_2P_CURSOR02,
    TEX_2P_ICON_CHAOR,
    TEX_2P_ICON_CURSOR,
    TEX_2P_ICON_HUNT,
    TEX_2P_ICON_KARATE,
    TEX_2P_ICON_KART,
    TEX_2P_ICON_RACE,
    TEX_2P_ICON_RANDOM,
    TEX_2P_ICON_SHOOT,
    TEX_2P_STAR_OFF,
    TEX_2P_STAR_ON,
    TEX_2P_WINDOW,
    TEX_2P_WINDOWX,
    TEX_2P_WINDOW_AMY,
    TEX_2P_WINDOW_CHAO,
    TEX_2P_WINDOW_DCHAO,
    TEX_2P_WINDOW_EGGMAN,
    TEX_2P_WINDOW_KNUCKLES,
    TEX_2P_WINDOW_METAL,
    TEX_2P_WINDOW_ROUGE,
    TEX_2P_WINDOW_SHADOW,
    TEX_2P_WINDOW_SONIC,
    TEX_2P_WINDOW_SSHADOW,
    TEX_2P_WINDOW_SSONIC,
    TEX_2P_WINDOW_TAILS,
    TEX_2P_WINDOW_TICAL,
    TEX_2P_WINDOW_ZERO,
    TEX_MODE2PVS_1P2P,
    TEX_MODE2PVS_1P2PX,
    TEX_MODE2PVS_CHANGE,
    TEX_MODE2PVS_TITLE,
    TEX_MODE_2PVS_NUMBERS,
    TEX_YAJIRUSI,
};

/****** Advertise Strings ***********************************************************************/
enum
{
    TEXT_ADV_MAINMENU_00,
    TEXT_ADV_MAINMENU_01,
    TEXT_ADV_MAINMENU_02,
    TEXT_ADV_MAINMENU_03,
    TEXT_ADV_MAINMENU_04,
    TEXT_ADV_SUBMENU_00,
    TEXT_ADV_SUBMENU_01,
    TEXT_ADV_SUBMENU_02,
    TEXT_ADV_SUBMENU_03,
    TEXT_ADV_SUBMENU_04,
    TEXT_ADV_SUBMENU_05,
    TEXT_ADV_SUBMENU_06,
    TEXT_ADV_SUBMENU_07,
    TEXT_ADV_SUBMENU_08,
    TEXT_ADV_SUBMENU_09,
    TEXT_ADV_FILESELECT_00,
    TEXT_ADV_FILESELECT_01,
    TEXT_ADV_FILESELECT_02,
    TEXT_ADV_FILESELECT_03,
    TEXT_ADV_FILESELECT_04,
    TEXT_ADV_FILESELECT_05,
    TEXT_ADV_FILESELECT_06,
    TEXT_ADV_OPTION_00,
    TEXT_ADV_OPTION_01,
    TEXT_ADV_OPTION_02,
    TEXT_ADV_OPTION_03,
    TEXT_ADV_OPTION_04,
    TEXT_ADV_OPTION_05,
    TEXT_ADV_OPTION_06,
    TEXT_ADV_OPTION_07,
    TEXT_ADV_OPTION_08,
    TEXT_ADV_OPTION_09,
    TEXT_ADV_OPTION_10,
    TEXT_ADV_OPTION_11,
    TEXT_ADV_OPTION_12,
    TEXT_ADV_OPTION_13,
    TEXT_ADV_OPTION_14,
    TEXT_ADV_OPTION_15,
    TEXT_ADV_OPTION_16,
    TEXT_ADV_OPTION_17,
    TEXT_ADV_OPTION_18,
    TEXT_ADV_OPTION_19,
    TEXT_ADV_OPTION_20,
    TEXT_ADV_OPTION_21,
    TEXT_ADV_OPTION_22,
    TEXT_ADV_OPTION_23,
    TEXT_ADV_OPTION_24,
    TEXT_ADV_OPTION_25,
    TEXT_ADV_OPTION_26,
    TEXT_ADV_OPTION_27,
    TEXT_ADV_OPTION_28,
    TEXT_ADV_OPTION_29,
    TEXT_ADV_OPTION_30,
    TEXT_ADV_OPTION_31,
    TEXT_ADV_OPTION_32,
    TEXT_ADV_STORYSELECT_00,
    TEXT_ADV_STORYSELECT_01,
    TEXT_ADV_STORYSELECT_02,
    TEXT_ADV_STORYSELECT_03,
    TEXT_ADV_STORYSELECT_04,
    TEXT_ADV_STORYSELECT_05,
    TEXT_ADV_STORYSELECT_06,
    TEXT_ADV_STORYSELECT_07,
    TEXT_ADV_STORYSELECT_08,
    TEXT_ADV_STORYSELECT_09,
    TEXT_ADV_STORYSELECT_10,
    TEXT_ADV_STORYSELECT_11,
    TEXT_ADV_STAGESELECT_00,
    TEXT_ADV_STAGESELECT_01,
    TEXT_ADV_STAGESELECT_02,
    TEXT_ADV_BOSSSELECT_00,
    TEXT_ADV_TWOPVS_00,
    TEXT_ADV_TWOPVS_01,
    TEXT_ADV_TWOPVS_02,
    TEXT_ADV_TWOPVS_03,
    TEXT_ADV_TWOPVS_04,
    TEXT_ADV_CARTMENU_00,
    TEXT_ADV_CARTMENU_01,
    TEXT_ADV_CARTMENU_02,
    TEXT_ADV_CARTMENU_03,
    TEXT_ADV_CARTMENU_04,
    TEXT_ADV_CARTMENU_05,
    TEXT_ADV_DOWNLOADEVENT_00,
    TEXT_ADV_DOWNLOADEVENT_01,
    TEXT_ADV_DOWNLOADEVENT_02,
    TEXT_ADV_DOWNLOADEVENT_03,
    TEXT_ADV_DOWNLOADEVENT_04,
    TEXT_ADV_ADXNAME_00,
    TEXT_ADV_ADXNAME_01,
    TEXT_ADV_ADXNAME_02,
    TEXT_ADV_ADXNAME_03,
    TEXT_ADV_ADXNAME_04,
    TEXT_ADV_ADXNAME_05,
    TEXT_ADV_ADXNAME_06,
    TEXT_ADV_ADXNAME_07,
    TEXT_ADV_ADXNAME_08,
    TEXT_ADV_ADXNAME_09,
    TEXT_ADV_ADXNAME_10,
    TEXT_ADV_ADXNAME_11,
    TEXT_ADV_ADXNAME_12,
    TEXT_ADV_ADXNAME_13,
    TEXT_ADV_ADXNAME_14,
    TEXT_ADV_ADXNAME_15,
    TEXT_ADV_ADXNAME_16,
    TEXT_ADV_ADXNAME_17,
    TEXT_ADV_ADXNAME_18,
    TEXT_ADV_ADXNAME_19,
    TEXT_ADV_ADXNAME_20,
    TEXT_ADV_ADXNAME_21,
    TEXT_ADV_ADXNAME_22,
    TEXT_ADV_ADXNAME_23,
    TEXT_ADV_ADXNAME_24,
    TEXT_ADV_ADXNAME_25,
    TEXT_ADV_ADXNAME_26,
    TEXT_ADV_ADXNAME_27,
    TEXT_ADV_ADXNAME_28,
    TEXT_ADV_ADXNAME_29,
    TEXT_ADV_ADXNAME_30,
    TEXT_ADV_ADXNAME_31,
    TEXT_ADV_ADXNAME_32,
    TEXT_ADV_ADXNAME_33,
    TEXT_ADV_ADXNAME_34,
    TEXT_ADV_ADXNAME_35,
    TEXT_ADV_ADXNAME_36,
    TEXT_ADV_ADXNAME_37,
    TEXT_ADV_ADXNAME_38,
    TEXT_ADV_ADXNAME_39,
    TEXT_ADV_ADXNAME_40,
    TEXT_ADV_ADXNAME_41,
    TEXT_ADV_ADXNAME_42,
    TEXT_ADV_ADXNAME_43,
    TEXT_ADV_ADXNAME_44,
    TEXT_ADV_ADXNAME_45,
    TEXT_ADV_ADXNAME_46,
    TEXT_ADV_ADXNAME_47,
    TEXT_ADV_ADXNAME_48,
    TEXT_ADV_ADXNAME_49,
    TEXT_ADV_ADXNAME_50,
    TEXT_ADV_ADXNAME_51,
    TEXT_ADV_ADXNAME_52,
    TEXT_ADV_ADXNAME_53,
    TEXT_ADV_ADXNAME_54,
    TEXT_ADV_ADXNAME_55,
    TEXT_ADV_ADXNAME_56,
    TEXT_ADV_ADXNAME_57,
    TEXT_ADV_ADXNAME_58,
    TEXT_ADV_ADXNAME_59,
    TEXT_ADV_ADXNAME_60,
    TEXT_ADV_ADXNAME_61,
    TEXT_ADV_ADXNAME_62,
    TEXT_ADV_ADXNAME_63,
    TEXT_ADV_ADXNAME_64,
    TEXT_ADV_ADXNAME_65,
    TEXT_ADV_ADXNAME_66,
    TEXT_ADV_ADXNAME_67,
    TEXT_ADV_GOHOUBI_00,
    TEXT_ADV_GOHOUBI_01,
    TEXT_ADV_GOHOUBI_02,
    TEXT_ADV_GOHOUBI_03,
    TEXT_ADV_GOHOUBI_04,
    TEXT_ADV_GOHOUBI_05,
    TEXT_ADV_GOHOUBI_06,
    TEXT_ADV_GOHOUBI_07,
    TEXT_ADV_GOHOUBI_08,
    TEXT_ADV_GOHOUBI_09,
    TEXT_ADV_GOHOUBI_10,
    TEXT_ADV_GOHOUBI_11,
    TEXT_ADV_GOHOUBI_12,
    TEXT_ADV_GOHOUBI_13,
    TEXT_ADV_GOHOUBI_14,
    TEXT_ADV_GOHOUBI_15,
    TEXT_ADV_GOHOUBI_16,
    TEXT_ADV_GOHOUBI_17,
    TEXT_ADV_GOHOUBI_18,
    TEXT_ADV_GOHOUBI_19,
    TEXT_ADV_GOHOUBI_20,
    TEXT_ADV_GOHOUBI_21,
    TEXT_ADV_GOHOUBI_22,
    TEXT_ADV_GOHOUBI_23,
    TEXT_ADV_GOHOUBI_24,
    TEXT_ADV_GOHOUBI_25,
    TEXT_ADV_SCEANSELECT_HERO_00,
    TEXT_ADV_SCEANSELECT_HERO_01,
    TEXT_ADV_SCEANSELECT_HERO_02,
    TEXT_ADV_SCEANSELECT_HERO_03,
    TEXT_ADV_SCEANSELECT_HERO_04,
    TEXT_ADV_SCEANSELECT_HERO_05,
    TEXT_ADV_SCEANSELECT_HERO_06,
    TEXT_ADV_SCEANSELECT_HERO_07,
    TEXT_ADV_SCEANSELECT_HERO_08,
    TEXT_ADV_SCEANSELECT_HERO_09,
    TEXT_ADV_SCEANSELECT_HERO_10,
    TEXT_ADV_SCEANSELECT_HERO_11,
    TEXT_ADV_SCEANSELECT_HERO_12,
    TEXT_ADV_SCEANSELECT_HERO_13,
    TEXT_ADV_SCEANSELECT_HERO_14,
    TEXT_ADV_SCEANSELECT_DARK_00,
    TEXT_ADV_SCEANSELECT_DARK_01,
    TEXT_ADV_SCEANSELECT_DARK_02,
    TEXT_ADV_SCEANSELECT_DARK_03,
    TEXT_ADV_SCEANSELECT_DARK_04,
    TEXT_ADV_SCEANSELECT_DARK_05,
    TEXT_ADV_SCEANSELECT_DARK_06,
    TEXT_ADV_SCEANSELECT_DARK_07,
    TEXT_ADV_SCEANSELECT_DARK_08,
    TEXT_ADV_SCEANSELECT_DARK_09,
    TEXT_ADV_SCEANSELECT_DARK_10,
    TEXT_ADV_SCEANSELECT_DARK_11,
    TEXT_ADV_SCEANSELECT_DARK_12,
    TEXT_ADV_SCEANSELECT_DARK_13,
    TEXT_ADV_SCEANSELECT_DARK_14,
    TEXT_ADV_SCEANSELECT_LAST_00,
    TEXT_ADV_SCEANSELECT_LAST_01,
    TEXT_ADV_SCEANSELECT_LAST_02,
    TEXT_ADV_SCEANSELECT_LAST_03,
    TEXT_ADV_WR_MAIN_OFFLINE_00,
    TEXT_ADV_WR_MAIN_ONLINE_00,
    TEXT_ADV_WR_MAIN_ONLINE_01,
    TEXT_ADV_WR_MAIN_ONLINE_02,
    TEXT_ADV_WR_MAIN_ONLINE_03,
    TEXT_ADV_WR_MAIN_ONLINE_04,
    TEXT_ADV_WR_MAIN_ONLINE_05,
    TEXT_ADV_WR_MAIN_ONLINE_06,
    TEXT_ADV_WR_WARING00_00,
    TEXT_ADV_WR_WARING00_01,
    TEXT_ADV_WR_WARING00_02,
    TEXT_ADV_WR_WARING00_03,
    TEXT_ADV_WR_WARING00_04,
    TEXT_ADV_WR_WARING00_05,
    TEXT_ADV_WR_WARING00_06,
    TEXT_ADV_WR_WARING00_07,
    TEXT_ADV_WR_WARING00_08,
    TEXT_ADV_WR_WARING00_09,
    TEXT_ADV_WR_WARING00_10,
    TEXT_ADV_WR_WARING00_11,
    TEXT_ADV_WR_WARING00_12,
    TEXT_ADV_WR_WARING00_13,
    TEXT_ADV_WR_WARING00_14,
    TEXT_ADV_WR_WARING00_15,
    TEXT_ADV_WR_WARING00_16,
    TEXT_ADV_WR_WARING00_17,
    TEXT_ADV_WR_WARING00_18,
    TEXT_ADV_WR_WARING00_19,
    TEXT_ADV_WR_WARING00_20,
    TEXT_ADV_WR_WARING00_21,
    TEXT_ADV_WR_WARING00_22,
    TEXT_ADV_WR_WARING00_23,
    TEXT_ADV_WR_WARING00_24,
    TEXT_ADV_WR_WARING00_25,
    TEXT_ADV_WR_WARING00_26,
    TEXT_ADV_WR_WARING00_27,
    TEXT_ADV_WR_WARING00_28,
    TEXT_ADV_WR_WARING01_00,
    TEXT_ADV_WR_WARING01_01,
    TEXT_ADV_WR_WARING01_02,
    TEXT_ADV_WR_WARING01_03,
    TEXT_ADV_WR_WARING01_04,
    TEXT_ADV_WR_WARING01_05,
    TEXT_ADV_WR_WARING01_06,
    TEXT_ADV_WR_WARING01_07,
    TEXT_ADV_WR_WARING01_08,
    TEXT_ADV_WR_WARING01_09,
    TEXT_ADV_WR_WARING01_10,
    TEXT_ADV_WR_WARING01_11,
    TEXT_ADV_WR_WARING01_12,
    TEXT_ADV_WR_WARING01_13,
    TEXT_ADV_WR_WARING01_14,
    TEXT_ADV_WR_WARING01_15,
    TEXT_ADV_WR_WARING01_16,
    TEXT_ADV_WR_VERIFY_00,
    TEXT_ADV_WR_VERIFY_01,
    TEXT_ADV_WR_VERIFY_02,
    TEXT_ADV_WR_VERIFY_03,
    TEXT_ADV_WR_VERIFY_04,
    TEXT_ADV_WR_VERIFY_05,
    TEXT_ADV_WR_VERIFY_06,
    TEXT_ADV_WR_VERIFY_07,
    TEXT_ADV_WR_VERIFY_08,
    TEXT_ADV_WR_VERIFY_09,
    TEXT_ADV_WR_VERIFY_10,
    TEXT_ADV_WR_VERIFY_11,
    TEXT_ADV_WR_VERIFY_12,
    TEXT_ADV_WR_VERIFY_13,
    TEXT_ADV_WR_VERIFY_14,
    TEXT_ADV_WR_VERIFY_15,
    TEXT_ADV_WR_VERIFY_16,
    TEXT_ADV_WR_VERIFY_17,
    TEXT_ADV_WR_VERIFY_18,
    TEXT_ADV_WR_VERIFY_19,
    TEXT_ADV_WR_VERIFY_20,
    TEXT_ADV_WR_VERIFY_21,
    TEXT_ADV_WR_VERIFY_22,
    TEXT_ADV_WR_VERIFY_23,
    TEXT_ADV_WR_VERIFY_24,
    TEXT_ADV_WR_VERIFY_25,
    TEXT_ADV_WR_VERIFY_26,
    TEXT_ADV_WR_VERIFY_27,
    TEXT_ADV_WR_VERIFY_28,
    TEXT_ADV_WR_VERIFY_29,
    TEXT_ADV_WR_VERIFY_30,
    TEXT_ADV_WR_VERIFY_31,
    TEXT_ADV_WR_VERIFY_32,
    TEXT_ADV_WR_VERIFY_33,
    TEXT_ADV_WR_VERIFY_34,
    TEXT_ADV_WR_VERIFY_35,
    TEXT_ADV_WR_VERIFY_36,
    TEXT_ADV_WR_SORT_00,
    TEXT_ADV_WR_SORT_01,
    TEXT_ADV_WR_SORT_02,
    TEXT_ADV_WR_SORT_03,
    TEXT_ADV_WR_SORT_04,
    TEXT_ADV_WR_SORT_05,
    TEXT_ADV_WR_SORT_06,
    TEXT_ADV_WR_SORT_07,
    TEXT_ADV_WR_SORT_08,
    TEXT_ADV_WR_SORT_09,
    TEXT_ADV_WR_SORT_10,
    TEXT_ADV_WR_SORT_11,
    TEXT_ADV_WR_LIST_00,
    TEXT_ADV_WR_LIST_01,
    TEXT_ADV_SUM001_00,
    TEXT_ADV_SUM001_01,
    TEXT_ADV_SUM001_02,
    TEXT_ADV_SUM001_03,
    TEXT_ADV_SUM001_04,
    TEXT_ADV_SUM002_00,
    TEXT_ADV_SUM002_01,
    TEXT_ADV_SUM002_02,
    TEXT_ADV_SUM002_03,
    TEXT_ADV_SUM002_04,
    TEXT_ADV_SUM003_00,
    TEXT_ADV_SUM003_01,
    TEXT_ADV_SUM003_02,
    TEXT_ADV_SUM003_03,
    TEXT_ADV_SUM003_04,
    TEXT_ADV_SUM003_05,
    TEXT_ADV_SUM004_00,
    TEXT_ADV_SUM004_01,
    TEXT_ADV_SUM004_02,
    TEXT_ADV_SUM004_03,
    TEXT_ADV_SUM004_04,
    TEXT_ADV_SUM004_05,
    TEXT_ADV_SUM004_06,
    TEXT_ADV_SUM005_00,
    TEXT_ADV_SUM005_01,
    TEXT_ADV_SUM005_02,
    TEXT_ADV_SUM005_03,
    TEXT_ADV_SUM006_00,
    TEXT_ADV_SUM006_01,
    TEXT_ADV_SUM006_02,
    TEXT_ADV_SUM006_03,
    TEXT_ADV_SUM006_04,
    TEXT_ADV_SUM007_00,
    TEXT_ADV_SUM007_01,
    TEXT_ADV_SUM007_02,
    TEXT_ADV_SUM008_00,
    TEXT_ADV_SUM008_01,
    TEXT_ADV_SUM008_02,
    TEXT_ADV_SUM008_03,
    TEXT_ADV_SUM009_00,
    TEXT_ADV_SUM009_01,
    TEXT_ADV_SUM009_02,
    TEXT_ADV_SUM009_03,
    TEXT_ADV_SUM010_00,
    TEXT_ADV_SUM010_01,
    TEXT_ADV_SUM010_02,
    TEXT_ADV_SUM010_03,
    TEXT_ADV_SUM010_04,
    TEXT_ADV_SUM010_05,
    TEXT_ADV_SUM011_00,
    TEXT_ADV_SUM011_01,
    TEXT_ADV_SUM011_02,
    TEXT_ADV_SUM011_03,
    TEXT_ADV_SUM011_04,
    TEXT_ADV_SUM012_00,
    TEXT_ADV_SUM012_01,
    TEXT_ADV_SUM012_02,
    TEXT_ADV_SUM012_03,
    TEXT_ADV_SUM012_04,
    TEXT_ADV_SUM012_05,
    TEXT_ADV_SUM013_00,
    TEXT_ADV_SUM013_01,
    TEXT_ADV_SUM013_02,
    TEXT_ADV_SUM013_03,
    TEXT_ADV_SUM013_04,
    TEXT_ADV_SUM014_00,
    TEXT_ADV_SUM014_01,
    TEXT_ADV_SUM014_02,
    TEXT_ADV_SUM015_00,
    TEXT_ADV_SUM015_01,
    TEXT_ADV_SUM015_02,
    TEXT_ADV_SUM015_03,
    TEXT_ADV_SUM015_04,
    TEXT_ADV_SUM016_00,
    TEXT_ADV_SUM016_01,
    TEXT_ADV_SUM016_02,
    TEXT_ADV_SUM016_03,
    TEXT_ADV_SUM017_00,
    TEXT_ADV_SUM017_01,
    TEXT_ADV_SUM017_02,
    TEXT_ADV_SUM017_03,
    TEXT_ADV_SUM017_04,
    TEXT_ADV_SUM018_00,
    TEXT_ADV_SUM018_01,
    TEXT_ADV_SUM018_02,
    TEXT_ADV_SUM018_03,
    TEXT_ADV_SUM018_04,
    TEXT_ADV_SUM019_00,
    TEXT_ADV_SUM019_01,
    TEXT_ADV_SUM019_02,
    TEXT_ADV_SUM019_03,
    TEXT_ADV_SUM020_00,
    TEXT_ADV_SUM020_01,
    TEXT_ADV_SUM020_02,
    TEXT_ADV_SUM020_03,
    TEXT_ADV_SUM021_00,
    TEXT_ADV_SUM021_01,
    TEXT_ADV_SUM021_02,
    TEXT_ADV_SUM021_03,
    TEXT_ADV_SUM021_04,
    TEXT_ADV_SUM022_00,
    TEXT_ADV_SUM022_01,
    TEXT_ADV_SUM022_02,
    TEXT_ADV_SUM022_03,
    TEXT_ADV_SUM023_00,
    TEXT_ADV_SUM023_01,
    TEXT_ADV_SUM023_02,
    TEXT_ADV_SUM023_03,
    TEXT_ADV_SUM024_00,
    TEXT_ADV_SUM024_01,
    TEXT_ADV_SUM024_02,
    TEXT_ADV_SUM101_00,
    TEXT_ADV_SUM101_01,
    TEXT_ADV_SUM101_02,
    TEXT_ADV_SUM101_03,
    TEXT_ADV_SUM101_04,
    TEXT_ADV_SUM101_05,
    TEXT_ADV_SUM102_00,
    TEXT_ADV_SUM102_01,
    TEXT_ADV_SUM102_02,
    TEXT_ADV_SUM102_03,
    TEXT_ADV_SUM102_04,
    TEXT_ADV_SUM103_00,
    TEXT_ADV_SUM103_01,
    TEXT_ADV_SUM103_02,
    TEXT_ADV_SUM103_03,
    TEXT_ADV_SUM103_04,
    TEXT_ADV_SUM103_05,
    TEXT_ADV_SUM104_00,
    TEXT_ADV_SUM104_01,
    TEXT_ADV_SUM104_02,
    TEXT_ADV_SUM104_03,
    TEXT_ADV_SUM105_00,
    TEXT_ADV_SUM105_01,
    TEXT_ADV_SUM105_02,
    TEXT_ADV_SUM105_03,
    TEXT_ADV_SUM106_00,
    TEXT_ADV_SUM106_01,
    TEXT_ADV_SUM106_02,
    TEXT_ADV_SUM106_03,
    TEXT_ADV_SUM106_04,
    TEXT_ADV_SUM107_00,
    TEXT_ADV_SUM107_01,
    TEXT_ADV_SUM107_02,
    TEXT_ADV_SUM108_00,
    TEXT_ADV_SUM108_01,
    TEXT_ADV_SUM108_02,
    TEXT_ADV_SUM108_03,
    TEXT_ADV_SUM109_00,
    TEXT_ADV_SUM109_01,
    TEXT_ADV_SUM109_02,
    TEXT_ADV_SUM109_03,
    TEXT_ADV_SUM110_00,
    TEXT_ADV_SUM110_01,
    TEXT_ADV_SUM110_02,
    TEXT_ADV_SUM111_00,
    TEXT_ADV_SUM111_01,
    TEXT_ADV_SUM111_02,
    TEXT_ADV_SUM111_03,
    TEXT_ADV_SUM111_04,
    TEXT_ADV_SUM111_05,
    TEXT_ADV_SUM112_00,
    TEXT_ADV_SUM112_01,
    TEXT_ADV_SUM112_02,
    TEXT_ADV_SUM112_03,
    TEXT_ADV_SUM113_00,
    TEXT_ADV_SUM113_01,
    TEXT_ADV_SUM113_02,
    TEXT_ADV_SUM114_00,
    TEXT_ADV_SUM114_01,
    TEXT_ADV_SUM114_02,
    TEXT_ADV_SUM114_03,
    TEXT_ADV_SUM115_00,
    TEXT_ADV_SUM115_01,
    TEXT_ADV_SUM115_02,
    TEXT_ADV_SUM116_00,
    TEXT_ADV_SUM116_01,
    TEXT_ADV_SUM116_02,
    TEXT_ADV_SUM116_03,
    TEXT_ADV_SUM117_00,
    TEXT_ADV_SUM117_01,
    TEXT_ADV_SUM117_02,
    TEXT_ADV_SUM117_03,
    TEXT_ADV_SUM117_04,
    TEXT_ADV_SUM118_00,
    TEXT_ADV_SUM118_01,
    TEXT_ADV_SUM118_02,
    TEXT_ADV_SUM119_00,
    TEXT_ADV_SUM119_01,
    TEXT_ADV_SUM119_02,
    TEXT_ADV_SUM119_03,
    TEXT_ADV_SUM119_04,
    TEXT_ADV_SUM120_00,
    TEXT_ADV_SUM120_01,
    TEXT_ADV_SUM120_02,
    TEXT_ADV_SUM121_00,
    TEXT_ADV_SUM121_01,
    TEXT_ADV_SUM121_02,
    TEXT_ADV_SUM121_03,
    TEXT_ADV_SUM122_00,
    TEXT_ADV_SUM122_01,
    TEXT_ADV_SUM122_02,
    TEXT_ADV_SUM122_03,
    TEXT_ADV_SUM122_04,
    TEXT_ADV_SUM201_00,
    TEXT_ADV_SUM201_01,
    TEXT_ADV_SUM201_02,
    TEXT_ADV_SUM201_03,
    TEXT_ADV_SUM201_04,
    TEXT_ADV_SUM201_05,
    TEXT_ADV_SUM201_06,
    TEXT_ADV_SUM202_00,
    TEXT_ADV_SUM202_01,
    TEXT_ADV_SUM202_02,
    TEXT_ADV_SUM202_03,
    TEXT_ADV_SUM203_00,
    TEXT_ADV_SUM203_01,
    TEXT_ADV_SUM203_02,
    TEXT_ADV_SUM203_03,
    TEXT_ADV_SUM203_04,
    TEXT_ADV_TWOPVS_EX_00,
    TEXT_ADV_TWOPVS_EX_01,
    TEXT_ADV_TWOPVS_EX_02,
    TEXT_ADV_TWOPVS_EX_03,
    TEXT_ADV_TWOPVS_EX_04,
    TEXT_ADV_TWOPVS_EX_05,
    TEXT_ADV_TWOPVS_EX_06,
    TEXT_ADV_TWOPVS_EX_07,
    TEXT_ADV_TWOPVS_EX_08,
    TEXT_ADV_VP_CHARACTER_00,
    TEXT_ADV_VP_CHARACTER_01,
    TEXT_ADV_VP_CHARACTER_02,
    TEXT_ADV_VP_CHARACTER_03,
    TEXT_ADV_VP_CHARACTER_04,
    TEXT_ADV_VP_CHARACTER_05,
    TEXT_ADV_VP_CHARACTER_06,
    TEXT_ADV_VP_CHARACTER_07,
    TEXT_ADV_VP_CHARACTER_08,
    TEXT_ADV_VP_CHARACTER_09,
    TEXT_ADV_VP_CHARACTER_10,
    TEXT_ADV_VP_CHARACTER_11,
    TEXT_ADV_VP_CHARACTER_12,
    TEXT_ADV_VP_CHARACTER_13,
    TEXT_ADV_VP_CHARACTER_14,
    TEXT_ADV_VP_CHARACTER_15,
    TEXT_ADV_VP_CHARACTER_16,
    TEXT_ADV_VP_CHARACTER_17,
    TEXT_ADV_VP_CHARACTER_18,
    TEXT_ADV_VP_CHARACTER_19,
    TEXT_ADV_VP_CHARACTER_20,
    TEXT_ADV_VP_CHARACTER_21,
    TEXT_ADV_VP_CHARACTER_22,
    TEXT_ADV_VP_CHARACTER_23,
    TEXT_ADV_VP_CHARACTER_24,
    TEXT_ADV_VP_CHARACTER_25,
    TEXT_ADV_VP_CHARACTER_26,
    TEXT_ADV_VP_CHARACTER_27,
    TEXT_ADV_VP_CHARACTER_28,
    TEXT_ADV_VP_CHARACTER_29,
    TEXT_ADV_VP_CHARACTER_30,
    TEXT_ADV_VP_CHARACTER_31,
    TEXT_ADV_VP_CHARACTER_32,
    TEXT_ADV_VP_CHARACTER_33,
    TEXT_ADV_VP_CHARACTER_34,
    TEXT_ADV_VP_CHARACTER_35,
    TEXT_ADV_VP_CHARACTER_36,
    TEXT_ADV_VP_CHARACTER_37,
    TEXT_ADV_VP_CHARACTER_38,
    TEXT_ADV_VP_CHARACTER_39,
    TEXT_ADV_VP_CHARACTER_40,
    TEXT_ADV_VP_CHARACTER_41,
    TEXT_ADV_VP_CHARACTER_42,
    TEXT_ADV_VP_CHARACTER_43,
    TEXT_ADV_VP_CHARACTER_44,
    TEXT_ADV_VP_CHARACTER_45,
    TEXT_ADV_VP_CHARACTER_46,
    TEXT_ADV_VP_CHARACTER_47,
    TEXT_ADV_VP_CHARACTER_48,
    TEXT_ADV_VP_CHARACTER_49,
    TEXT_ADV_VP_CHARACTER_50,
    TEXT_ADV_VP_CHARACTER_51,
    TEXT_ADV_VP_CHARACTER_52,
    TEXT_ADV_VP_CHARACTER_53,
    TEXT_ADV_VP_CHARACTER_54,
    TEXT_ADV_VP_CHARACTER_55,
    TEXT_ADV_VP_CHARACTER_56,
    TEXT_ADV_VP_CHARACTER_57,
    TEXT_ADV_VP_CHARACTER_58,
    TEXT_ADV_VP_CHARACTER_59,
    TEXT_ADV_VP_CHARACTER_60,
    TEXT_ADV_VP_CHARACTER_61,
    TEXT_ADV_VP_CHARACTER_62,
    TEXT_ADV_VP_CHARACTER_63,
    TEXT_ADV_VP_CHARACTER_64,
    TEXT_ADV_VP_CHARACTER_65,
    TEXT_ADV_VP_CHARACTER_66,
    TEXT_ADV_VP_CHARACTER_67,
    TEXT_ADV_VP_CHARACTER_68,
    TEXT_ADV_VP_CHARACTER_69,
    TEXT_ADV_VP_STAGE_00,
    TEXT_ADV_VP_STAGE_01,
    TEXT_ADV_VP_STAGE_02,
    TEXT_ADV_VP_STAGE_03,
    TEXT_ADV_VP_STAGE_04,
    TEXT_ADV_VP_STAGE_05,
    TEXT_ADV_VP_STAGE_06,
    TEXT_ADV_VP_OPTIONS_00,
    TEXT_ADV_VP_OPTIONS_01,
    TEXT_ADV_VP_OPTIONS_02,
    TEXT_ADV_VP_OPTIONS_03,
    TEXT_ADV_VP_OPTIONS_04,
    TEXT_ADV_EMBLEMRESULT_EX_00,
    TEXT_ADV_EMBLEMRESULT_EX_01,
    TEXT_ADV_EMBLEMRESULT_EX_02,
    TEXT_ADV_EMBLEMRESULT_EX_03,
    TEXT_ADV_EMBLEMRESULT_EX_04,
    TEXT_ADV_EMBLEMRESULT_EX_05,
    TEXT_ADV_EMBLEMRESULT_EX_06,
    TEXT_ADV_EMBLEMRESULT_EX_07,
    TEXT_ADV_EMBLEMRESULT_EX_08,
    TEXT_ADV_EMBLEMRESULT_EX_09,
    TEXT_ADV_EMBLEMRESULT_EX_10,
    TEXT_ADV_EMBLEMRESULT_EX_11,
    TEXT_ADV_EMBLEMRESULT_EX_12,
    TEXT_ADV_EMBLEMRESULT_EX_13,
    TEXT_ADV_EMBLEMRESULT_EX_14,
    TEXT_ADV_EMBLEMRESULT_EX_15,
    TEXT_ADV_EMBLEMRESULT_EX_16,
    TEXT_ADV_EMBLEMRESULT_EX_17,
    TEXT_ADV_EMBLEMRESULT_EX_18,
    TEXT_ADV_EMBLEMRESULT_EX_19,
    TEXT_ADV_ADXNAME_EX_00,
    TEXT_ADV_ADXNAME_EX_01,
    TEXT_ADV_ADXNAME_EX_02,
    TEXT_ADV_ADXNAME_EX_03,
    TEXT_ADV_ADXNAME_EX_04,
    TEXT_ADV_ADXNAME_EX_05,
    TEXT_ADV_ADXNAME_EX_06,
    TEXT_ADV_ADXNAME_EX_07,
    TEXT_ADV_ADXNAME_EX_08,
    TEXT_ADV_ADXNAME_EX_09,
    TEXT_ADV_ADXNAME_EX_10,
    TEXT_ADV_ADXNAME_EX_11,
    TEXT_ADV_ADXNAME_EX_12,
    TEXT_ADV_OPTION_EX_00,
    TEXT_ADV_OPTION_EX_01,
    TEXT_ADV_OPTION_EX_02,
    TEXT_ADV_OPTION_EX_03,
    TEXT_ADV_OPTION_EX_04,
    TEXT_ADV_OPTION_EX_05,
    TEXT_ADV_GOHOUBI_EX_00,
    TEXT_ADV_GOHOUBI_EX_01,
    TEXT_ADV_GOHOUBI_EX_02,
    TEXT_ADV_GOHOUBI_EX_03,
    TEXT_ADV_GOHOUBI_EX_04,
    TEXT_ADV_GOHOUBI_EX_05,
    TEXT_ADV_GOHOUBI_EX_06,
    TEXT_ADV_GOHOUBI_EX_07,
    TEXT_ADV_GOHOUBI_EX_08,
    TEXT_ADV_GOHOUBI_EX_09,
    TEXT_ADV_GOHOUBI_EX_10,
    TEXT_ADV_GOHOUBI_EX_11,
    TEXT_ADV_GOHOUBI_EX_12,
    TEXT_ADV_GOHOUBI_EX_13,
    TEXT_ADV_GOHOUBI_EX_14,
    TEXT_ADV_GOHOUBI_EX_15,
    TEXT_ADV_GOHOUBI_EX_16,
    TEXT_ADV_GOHOUBI_EX_17,
    TEXT_ADV_GOHOUBI_EX_18,
    TEXT_ADV_GOHOUBI_EX_19,
    TEXT_ADV_GOHOUBI_EX_20,
    TEXT_ADV_FILESELECT_EX_00,
    TEXT_ADV_FILESELECT_EX_01,
    TEXT_ADV_FILESELECT_EX_02,
    TEXT_ADV_FILESELECT_EX_03,
    TEXT_ADV_FILESELECT_EX_04,
    TEXT_ADV_FILESELECT_EX_05,
    TEXT_ADV_FILESELECT_EX_06,
    TEXT_ADV_FILESELECT_EX_07,
    TEXT_ADV_2PBATTLE_01,
    TEXT_ADV_2PBATTLE_02,
    TEXT_ADV_2PBATTLE_03,
    TEXT_ADV_2PBATTLE_04,
    TEXT_ADV_UNLOCK_FULL_GAME,
    TEXT_ADV_OPTIONS_THEME_UNLOCK,

    TEXT_ADV_MAX,                   /* enum count                                               */
};

/****** Unknown (Knuckles MotioNs?) *************************************************************/
enum
{
    MN_START,
    MN_STAND0,
    MN_PUNCH0,
    MN_PUNCH1,
    MN_PUNCH2,
    MN_PUNCH3,
    MN_PUNCH4,
    MN_PUNCH0X,
    MN_PUNCH1X,
    MN_PUNCH2X,
    MN_PUNCH3X,
    MN_PUNCH4X,
    MN_PUNCH0XX,
    MN_PUNCH1XX,
    MN_PUNCH2XX,
    MN_PUNCH3XX,
    MN_PUNCH4XX,
    MN_2PUNCH0,
    MN_2PUNCH1,
    MN_2PUNCH2,
    MN_2PUNCH3,
    MN_2PUNCH4,
    MN_2PUNCH0X,
    MN_2PUNCH1X,
    MN_2PUNCH2X,
    MN_2PUNCH3X,
    MN_2PUNCH4X,
    MN_2PUNCH0XX,
    MN_2PUNCH1XX,
    MN_2PUNCH2XX,
    MN_2PUNCH3XX,
    MN_2PUNCH4XX,
    MN_ATTACK0,
    MN_ATTACK1,
    MN_ATTACK2,
    MN_ATTACK3,
    MN_ATTACK0X,
    MN_ATTACK1X,
    MN_ATTACK2X,
    MN_ATTACK3X,
    MN_ATTACK0XX,
    MN_ATTACK1XX,
    MN_ATTACK2XX,
    MN_ATTACK3XX,
    MN_SCREW0,
    MN_SCREW1,
    MN_SCREW2,
    MN_SCREW0X,
    MN_SCREW1X,
    MN_SCREW2X,
    MN_SCREW0XX,
    MN_SCREW1XX,
    MN_SCREW2XX,
    MN_2SCREW0,
    MN_2SCREW1,
    MN_2SCREW2,
    MN_2SCREW0X,
    MN_2SCREW1X,
    MN_2SCREW2X,
    MN_2SCREW0XX,
    MN_2SCREW1XX,
    MN_2SCREW2XX,
    MN_MODORI,
    MN_DEAD,
};

/****** Chao PoSTure ****************************************************************************/
enum
{
    PST_MTN_OTHERS,
    PST_MTN_STAND,
    PST_MTN_SIT,
    PST_MTN_LIE,
    PST_MTN_FLY,
    PST_MTN_JUMP,
    PST_MTN_SWIM,
    PST_MTN_CLIMB,
    PST_MTN_WALK,
    PST_MTN_EAT,
};

typedef enum
{
    AL_PST_STAND,
    AL_PST_SIT,
    AL_PST_LIE,
    AL_PST_FUSE,
    AL_PST_OTHERS,
}
eAL_PST;

/********************************/
/*  Structures                  */
/********************************/
/****** Unknown (Advertise?) ********************************************************************/
typedef struct
{
    s32              type;
    NJS_TEXLIST*     ptexlist;
    NJS_CNK_OBJECT*  pobj;
    NJS_DIRECT_HEAD* pdirecthead;
}
CODIRECTST;

/****** Battle Menu (2P) ************************************************************************/
typedef struct
{
    NJS_CNK_OBJECT* object;
    NJS_MOTION*     motion;
    NJS_MOTION*     selectMotion;
    NJS_MOTION*     decideMotion;
    NJS_CNK_OBJECT* trans;
    NJS_CNK_OBJECT* transNode;
    NJS_CNK_OBJECT* hideObject;
    NJS_MOTION*     hideMotion;
    NJS_MOTION*     hideSelectMotion;
    NJS_MOTION*     hideDecideMotion;
    NJS_CNK_OBJECT* costume;
    s32             hosi;
    s32             instTop;
    s32             window;
    f32             cursorSize;
}
CHARA_DISP_DATAS;

typedef struct
{
    f32             bgFade;
    s32             bgPos;
    f32             iconFade;
    f32             motionFlame[15];
    s32             motionType[15];
    f32             cameraFlame;
    NJS_MOTION*     currentCamera;
    f32             noSelectCharaScl[15];
    s32             guruguruAngle;
}
BATTLEA;

/****** Unknown (Plist) *************************************************************************/
/*
*   This might be part of the cart course stuff, for the kanban posters
*/
typedef struct
{
    NJS_POINT2I*    uvAddress;
    NJS_POINT2I     originalPos;
}
PlistUv;

typedef struct
{
    s32             texId;
    u16*            texIdAddress;
    s32             uvMax;
    PlistUv*        uvData;
}
PlistTex;

typedef struct
{
    NJS_CNK_OBJECT* objPointer;
    s32             texMax;
    PlistTex**      texData;
}
PlistData;

/****** Motion Table ****************************************************************************/
typedef struct
{
    s16             m_this;
    s16             node;
    NJS_MOTION*     ptr;
}
MML_MOTIONTABLE;

/****** Chunk UV Data ***************************************************************************/
typedef struct
{
    NJS_CNK_OBJECT* pobj;
    UVCHANGEINFO*   puvc;
    s32             mode;
}
UVCNKD;

/****** Lig GC (?) ******************************************************************************/
typedef struct
{
    NJS_CNK_OBJECT* pobj;
    s32             num;
}
LIGC;

/********************************/
/*  Data                        */
/********************************/
/****** Advertise *******************************************************************************/
#define SelectedMissionCharacter    DATA_REF(char, 0x01D1BF05)
#define StageSelectLevelSelection   DATA_REF(char, 0x01D1BF08)

EXTERN_END

#endif/*H_SA2B_MTUNRESOLVED*/
